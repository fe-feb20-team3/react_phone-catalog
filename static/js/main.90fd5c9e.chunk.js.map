{"version":3,"sources":["helpers/config.ts","helpers/api.ts","helpers/sort.ts","helpers/sliderFilter.ts","components/Favorites/FavoritesContext.tsx","components/Nav/Nav.tsx","components/Search/Search.tsx","helpers/debounce.ts","components/Icon/Icon.tsx","components/Cart/CartContext.tsx","components/Cart/Cart.tsx","components/NavSliding/NavSliding.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","components/Buttons/PrimaryButton.tsx","components/GoodsList/GoodItem.tsx","components/GoodsList/GoodsList.tsx","components/Pagination/Pagination.tsx","components/Pagination/SelectPerPage.tsx","components/NotAvailable/NotAvailable.tsx","components/Select/Select.tsx","components/GoodsSection/GoodsSection.tsx","components/GoodPage/GoodTechInfo.tsx","components/GoodPage/GoodSpecsInfo.tsx","components/CardSlider/CardSlider.tsx","components/LoadSpinner/LoadSpinner.tsx","components/GoodPage/GoodPage.tsx","components/Banner/Banner.tsx","components/ShopCategory/ShopCategory.tsx","components/HomePage/HomePage.tsx","components/Favorites/Favorites.tsx","components/Checkout/Checkout.tsx","App.tsx","index.tsx"],"names":["SECTION_LINK","name","title","url","type","imgUrl","FOOTER_LINKS","Banners","alt","path","PER_PAGE_SETTINGS","SLIDER_FILTER_TYPE","API_URL","getData","a","fetch","response","json","getGoods","phones","getGoodDetail","id","goodDetail","SORT_TYPES","field","typeField","isReverse","isDefault","sliderFilter","cards","filterType","filter","card","price","discount","sort","b","aDiscountPrice","slice","Math","random","age","FavoritesContext","React","createContext","favorites","addFavorite","removeFavorite","isFavorite","FavoritesContextWrapper","children","useState","setFavorites","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","Provider","value","product","some","Nav","links","className","map","exact","key","to","activeClassName","Search","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","query","get","visibleQuery","setVisibleQuery","myRef","useRef","current","focus","updateQuery","useCallback","f","delay","timerId","clearTimeout","args","window","setTimeout","debounce","actualQuery","delete","set","push","toString","action","onSubmit","e","preventDefault","htmlFor","placeholder","ref","onChange","target","cn","Search__Button","length","onClick","Icon","tag","size","border","inActive","Icon__Border","Number","CartContext","cart","selectGood","changeGoodCount","clearCart","CartContextWrapper","setCart","good","newItem","count","Cart","goods","useContext","prod","goodForBuy","setGoodForBuy","totalPrice","find","reduce","accum","currentValue","priceWithoutDiscount","src","style","height","i","transform","imageUrl","disabled","Boolean","NavSliding","isOpen","setIsOpen","show","Header","component","Footer","scrollTo","PrimaryButton","text","selected","Button","Button__Primary","GoodItem","section","useParams","screen","capacity","ram","selectedGood","GoodsList","Pagination","qty","perPage","currentPage","currentSort","pages","Array","ceil","fill","p","handleClick","page","pathname","getArrow","Pagination__Button","SelectPerPage","options","currentPerPage","currentOption","option","clickSubscribe","document","documentElement","addEventListener","removeEventListener","Select","Select__Closest","Select__Active","Select__Arrow","Select__List","data-value","chooseSelectValue","NotAvailable","defaultSortType","item","currentSortType","useMemo","GoodsSection","toLowerCase","perPageDefault","perPageParam","sortParam","sortType","sectionProp","link","filteredGoods","searchedGoods","snippet","includes","sortedGoods","direction","String","localeCompare","sortBy","paginatedGoods","console","log","Helmet","GoodTechInfo","goodInfo","display","screenResolution","hardware","cpu","GoodSpecsInfo","camera","primary","zoom","connectivity","cell","CardSlider","left","setLeft","cardsLength","position","setPosition","handleSlider","width","cardWidth","LoadSpinner","GoodPage","match","useRouteMatch","setGoodDetail","setGoodInfo","errorMessage","setErrorMessage","isLoading","setIsLoading","isLoaded","setIsLoaded","activeImageIndex","setActiveImageIndex","currentType","phone","sliderItems","params","loadGoodDetail","goodId","data","preparedGoodDetail","typeParam","images","image","href","handleImages","description","BannerSlider","bannerImages","currentPosition","setcurrentPosition","handleSlide","newLeftPosition","chooseImages","ShopCategory","HomePage","hotPrices","highPrices","Favorites","favoritesProducts","Checkout","App","setGoods","loadGoods","preparedData","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.90fd5c9e.chunk.js","sourcesContent":["export const SECTION_LINK: Link[] = [\n  {\n    name: 'Phones',\n    title: 'Mobile Phones',\n    url: '/phones',\n    type: 'phone',\n    imgUrl: 'images/category/phones.png',\n  },\n  {\n    name: 'Tablets',\n    title: 'Tablets',\n    url: '/tablets',\n    type: 'tablet',\n    imgUrl: 'images/category/tablets.png',\n  },\n  {\n    name: 'Accessories',\n    title: 'Accessories',\n    url: '/accessories',\n    type: 'accessories',\n    imgUrl: 'images/category/accessoires.png',\n  },\n];\n\nexport const FOOTER_LINKS: Link[] = [\n  {\n    name: 'Github',\n    url: 'https://github.com/fe-feb20-team3',\n  },\n  {\n    name: 'Contacts',\n    url: '/contacts',\n  },\n  {\n    name: 'Rights',\n    url: '/rights',\n  },\n];\n\nexport const Banners: Banners[] = [\n  { alt: 'First banner', path: 'images/banner.jpg' },\n  { alt: 'Second banner', path: 'images/banner2.jpg' },\n  { alt: 'Third banner', path: 'images/banner3.jpg' },\n];\n\nexport const PER_PAGE_SETTINGS = [\n  {\n    name: '4',\n  },\n  {\n    name: '8',\n  },\n  {\n    name: '12',\n  },\n  {\n    name: '16',\n  },\n];\n\nexport const SLIDER_FILTER_TYPE = {\n  hotPrice: 'hotPrice',\n  alsoLike: 'alsoLike',\n  newModels: 'newModels',\n};\n","const API_URL = 'https://mate-academy.github.io/react_phone-catalog/api';\n\nexport async function getData<T>(url: string): Promise<T[]> {\n  const response = await fetch(url);\n  const json = await response.json();\n\n  return json;\n}\n\nexport async function getGoods() {\n  const phones = await getData<Good>(`${API_URL}/products.json`);\n\n  return phones;\n}\n\nexport async function getGoodDetail(id: string) {\n  const response = await fetch(`${API_URL}/products/${id}.json`);\n  const goodDetail = await response.json();\n\n  return goodDetail;\n}\n","export const SORT_TYPES: SortType[] = [\n  {\n    name: 'Price: Low to High',\n    field: 'price',\n    typeField: 'number',\n    type: 'cheap',\n    isReverse: false,\n  },\n  {\n    name: 'Price: High to Low',\n    field: 'price',\n    typeField: 'number',\n    type: 'expensive',\n    isReverse: true,\n    isDefault: true,\n  },\n  {\n    name: 'Goods: A to Z',\n    field: 'name',\n    typeField: 'string',\n    type: 'alphabet',\n    isReverse: false,\n  },\n  {\n    name: 'Goods: Z to A',\n    field: 'name',\n    typeField: 'string',\n    type: 'betalpha',\n    isReverse: true,\n  },\n  {\n    name: 'Newest',\n    field: 'age',\n    typeField: 'number',\n    type: 'newest',\n    isReverse: false,\n  },\n  {\n    name: 'Oldest',\n    field: 'age',\n    typeField: 'number',\n    type: 'oldest',\n    isReverse: true,\n  },\n];\n\nexport const sortBy = (goods: Good[], sortType: SortType) => {\n  if (sortType.typeField === 'number') {\n    const sortedGoods = [...goods].sort((a, b) => {\n      const direction = sortType.isReverse ? -1 : 1;\n\n      return (Number(a[sortType.field]) - Number(b[sortType.field])) * direction;\n    });\n\n    return sortedGoods;\n  }\n\n  if (sortType.typeField === 'string') {\n    return [...goods].sort((a, b) => {\n      const direction = sortType.isReverse ? -1 : 1;\n\n      return (String(a[sortType.field]).localeCompare(String(b[sortType.field]))) * direction;\n    });\n  }\n\n  return goods;\n};\n","import { SLIDER_FILTER_TYPE } from './config';\n\nexport const sliderFilter = (cards: Good[], filterType: string, id: string) => {\n  switch (filterType) {\n    case SLIDER_FILTER_TYPE.hotPrice:\n      return [...cards]\n        .filter(card => card.price && card.discount)\n        .sort((a: Good, b: Good): number => {\n          const aDiscountPrice = (a.discount / 100) * a.price;\n          const bDiscountPrice = (b.discount / 100) * b.price;\n\n          return bDiscountPrice - aDiscountPrice;\n        })\n        .slice(0, 8);\n\n    case SLIDER_FILTER_TYPE.alsoLike:\n      return [...cards]\n        .sort((): number => {\n          return Math.random() - 0.5;\n        })\n        .filter(card => card.id !== id)\n        .slice(0, 8);\n\n    case SLIDER_FILTER_TYPE.newModels:\n      return [...cards]\n        .sort((a: Good, b: Good): number => {\n          const aDiscountPrice = a.age;\n          const bDiscountPrice = b.age;\n\n          return aDiscountPrice - bDiscountPrice;\n        })\n        .slice(0, 8);\n\n    default:\n      return cards;\n  }\n};\n","import React, { useState, useEffect } from 'react';\n\nexport const FavoritesContext = React.createContext<FavoritesContextType>({\n  favorites: [],\n  addFavorite: () => {},\n  removeFavorite: () => {},\n  isFavorite: () => false,\n});\n\nexport const FavoritesContextWrapper: React.FC = ({ children }) => {\n  const [favorites, setFavorites] = useState<Array<string>>([]);\n\n  useEffect(\n    () => {\n      if (localStorage.getItem('favoriteProducts')) {\n        setFavorites([...JSON.parse(localStorage.getItem('favoriteProducts') || '')]);\n      }\n    },\n    [],\n  );\n\n  useEffect(\n    () => localStorage.setItem('favoriteProducts', JSON.stringify([...favorites])),\n    [favorites],\n  );\n\n  const addFavorite = (product: Good) => {\n    setFavorites([...favorites, product.id]);\n  };\n\n  const removeFavorite = (product: Good) => {\n    setFavorites(favorites.filter(id => id !== product.id));\n  };\n\n  const isFavorite = (product: Good) => {\n    return favorites.some(id => id === product.id);\n  };\n\n  return (\n    <FavoritesContext.Provider value={{\n      favorites,\n      addFavorite,\n      removeFavorite,\n      isFavorite,\n    }}\n    >\n      {children}\n    </FavoritesContext.Provider>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Nav.scss';\n\ninterface Props {\n  links: Link[];\n  className?: string;\n}\n\nexport const Nav: React.FC<Props> = ({ links, className }) => (\n  <nav className={`Nav ${className || ''}`}>\n    <ul className=\"Nav__List\">\n      {links.map(({ name, url, exact }) => (\n        <li className=\"Nav__Item\" key={name}>\n          <NavLink\n            to={url}\n            exact={exact}\n            className=\"Nav__Link\"\n            activeClassName=\"Nav__Link--active\"\n          >\n            {name}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  </nav>\n);\n","import React, {\n  useState, useEffect, useRef, useCallback,\n} from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './Search.scss';\nimport { debounce } from '../../helpers/debounce';\n\nexport const Search = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n  const [visibleQuery, setVisibleQuery] = useState(query);\n\n  const myRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (query === '') {\n      myRef.current!.focus();\n    }\n  }, [query]);\n\n  const updateQuery = useCallback(debounce(\n    (actualQuery: string): void => {\n      if (actualQuery === '') {\n        searchParams.delete('query');\n      } else {\n        searchParams.set('query', actualQuery);\n      }\n\n      searchParams.set('page', '1');\n      history.push({ search: searchParams.toString() });\n    },\n    1000,\n  ), []);\n\n  const handleQueryUpdate = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    updateQuery(value);\n    setVisibleQuery(value);\n  };\n\n  const clearInput = () => {\n    searchParams.delete('query');\n    history.push({ search: searchParams.toString() });\n    updateQuery('');\n    setVisibleQuery('');\n  };\n\n  return (\n    <form action=\"./\" className=\"Search\" onSubmit={e => e.preventDefault()}>\n      <label htmlFor=\"search\" className=\"Search__Label\">\n        <input\n          type=\"text\"\n          className=\"Search__Input\"\n          value={visibleQuery}\n          placeholder=\"Search in phones...\"\n          ref={myRef}\n          onChange={handleQueryUpdate}\n        />\n        <button\n          className={cn({\n            Search__Button: true,\n            'Search__Button--clear': visibleQuery.length > 0,\n          })}\n          onClick={clearInput}\n        />\n      </label>\n    </form>\n  );\n};\n","export const debounce = (f: (value: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: any) => {\n    clearTimeout(timerId);\n    timerId = window.setTimeout(f, delay, ...args);\n  };\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport './Icon.scss';\n\ninterface Props {\n  name: string;\n  tag?: number;\n  size?: number;\n  border: boolean;\n  inActive: boolean;\n}\n\nexport const Icon: React.FC<Props> = ({\n  name,\n  tag,\n  size = 0,\n  border,\n  inActive,\n}) => (\n  <button\n    type=\"button\"\n    className={cn(`Icon Icon__Size${size}`, {\n      Icon__Border: border,\n    })}\n  >\n    <div className={\n      cn(\n        'Icon__Image',\n        `Icon__Image--${name}`,\n        { 'Icon__Image--inactive': inActive },\n      )\n    }\n    />\n    {Number(tag) > 0 && <div className=\"Icon__tag\">{tag}</div>}\n  </button>\n);\n","import React, { useState, useEffect } from 'react';\n\nexport const CartContext = React.createContext<CardContextType>({\n  cart: [],\n  selectGood: () => {},\n  changeGoodCount: () => {},\n  clearCart: () => {},\n});\n\n\nexport const CartContextWrapper: React.FC = ({ children }) => {\n  const [cart, setCart] = useState<CartGood[]>([]);\n\n  useEffect(\n    () => {\n      if (localStorage.getItem('cartItem')) {\n        setCart([...JSON.parse(localStorage.getItem('cartItem') || '')]);\n      }\n    },\n    [],\n  );\n\n  useEffect(\n    () => localStorage.setItem('cartItem', JSON.stringify([...cart])),\n    [cart],\n  );\n\n  const selectGood = (id: string): void => {\n    if (cart.some(good => good.id === id)) {\n      setCart(cart.filter(good => good.id !== id));\n    } else {\n      const newItem = {\n        id,\n        count: 1,\n      };\n\n      setCart([...cart, newItem]);\n    }\n  };\n\n  const changeGoodCount = (id: string, path: number) => {\n    setCart(cart.map(good => ({\n      ...good,\n      count: id === good.id\n        ? good.count + path\n        : good.count,\n    })));\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  return (\n    <CartContext.Provider value={{\n      cart,\n      selectGood,\n      changeGoodCount,\n      clearCart,\n    }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { CartContext } from './CartContext';\nimport './Cart.scss';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const Cart: React.FC<Props> = ({ goods }) => {\n  const {\n    cart, changeGoodCount, selectGood, clearCart,\n  } = useContext(CartContext);\n  const [goodForBuy, setGoodForBuy] = useState<Good[]>(goods\n    .filter(good => cart\n      .some(prod => prod.id === good.id)));\n\n  useEffect(() => {\n    if (cart.length) {\n      setGoodForBuy(goods\n        .filter(good => cart\n          .some(prod => prod.id === good.id)));\n    }\n  }, [cart, goods]);\n\n  const totalPrice = goodForBuy\n    .map(good => {\n      const clearPrice = good.discount > 0\n        ? good.price - ((good.price / 100) * good.discount)\n        : good.price;\n      const currentCount = cart.find(prod => prod.id === good.id)?.count;\n\n      return clearPrice * (currentCount || 1);\n    })\n    .reduce((accum, currentValue) => currentValue + accum, 0);\n\n  const priceWithoutDiscount = goodForBuy\n    .map(good => {\n      const { price } = good;\n      const currentCount = cart.find(prod => prod.id === good.id)?.count;\n\n      return price * (currentCount || 1);\n    })\n    .reduce((accum, currentValue) => accum + currentValue, 0);\n\n  return (\n    <>\n      {cart.length === 0 && (\n        <div className=\"Cart__Empty\">\n          <h1 className=\"Cart__EmptyTitle\">\n            Cart is empty :(\n          </h1>\n          <img\n            src=\"images/emptyCart.png\"\n            alt=\"Empty Cart\"\n            className=\"Cart__EmptyImage\"\n          />\n          <div className=\"Cart__ButtonContainer\">\n            <Link className=\"Cart__GoShop\" to=\"/\">\n              Go to shop\n            </Link>\n          </div>\n        </div>\n      )}\n      {cart.length > 0 && (\n        <div\n          className=\"Cart container\"\n          style={{\n            height: `${90 + (cart.length * 128) + (16 * (cart.length - 1))}px`,\n          }}\n        >\n          <h1 className=\"Cart__Title\">\n            Cart\n          </h1>\n          <div className=\"Cart__InfoContainer\">\n            <ul className=\"Cart__List\">\n              {goodForBuy.map((good, i) => (\n                <li\n                  className=\"Cart__Item\"\n                  key={good.id}\n                  style={{\n                    transform: `translateY(${(i * 128) + (16 * i - 1)}px)`,\n                  }}\n                >\n                  <div className=\"Cart__Info\">\n                    <label\n                      className=\"Cart__Label\"\n                    >\n                      <button\n                        className=\"Cart__Remove\"\n                        onClick={() => selectGood(good.id)}\n                        type=\"button\"\n                      />\n                    </label>\n                    <div className=\"Cart__Image-Container\">\n                      <img\n                        src={good.imageUrl}\n                        alt={good.name}\n                        className=\"Cart__Image\"\n                      />\n                    </div>\n                    <p className=\"Cart__Name\">\n                      {good.name}\n                    </p>\n                  </div>\n                  <div className=\"Cart__CountAndPrice\">\n                    <div className=\"Cart__ControlPanel\">\n                      <button\n                        type=\"button\"\n                        className=\"Cart__ChangeCount\"\n                        disabled={\n                          Boolean(cart\n                            .find(prod => prod.id === good.id && prod.count === 1)?.count)\n                        }\n                        onClick={() => changeGoodCount(good.id, -1)}\n                      >\n                        <span className=\"Cart__CharMinus\" />\n                      </button>\n                      <p className=\"Cart__ModelCount\">\n                        {cart.find(prod => prod.id === good.id)?.count}\n                      </p>\n                      <button\n                        type=\"button\"\n                        className=\"Cart__ChangeCount\"\n                        disabled={\n                          Boolean(cart\n                            .find(prod => prod.id === good.id && prod.count === 10)?.count)\n                        }\n                        onClick={() => changeGoodCount(good.id, 1)}\n                      >\n                        <span className=\"Cart__CharPlus\" />\n                      </button>\n                    </div>\n                    <p className=\"Cart__Price\">\n                      $\n                      {good.discount > 0\n                        ? good.price - ((good.discount / 100) * good.price)\n                        : good.price}\n                    </p>\n                    {good.discount && (\n                      <p className=\"Cart__OldPriceCard\">\n                        $\n                        {good.price}\n                      </p>\n                    )}\n                  </div>\n                </li>\n              ))}\n            </ul>\n            {cart.length > 0 && (\n              <div className=\"Cart__Checkout\">\n                <div className=\"Cart__CheckoutContainer\">\n                  <p className=\"Cart__CheckoutPrice\">\n                    $\n                    {totalPrice}\n                  </p>\n                  {priceWithoutDiscount > totalPrice && (\n                    <p className=\"Cart__OldPrice\">\n                      $\n                      {priceWithoutDiscount}\n                    </p>\n                  )}\n                  <p className=\"Cart__CheckoutTotal\">\n                    Total for\n                    {' '}\n                    {cart.length}\n                    {' '}\n                    items\n                  </p>\n                  <Link\n                    to=\"/checkout\"\n                    className=\"Cart__CheckoutButton\"\n                    onClick={() => clearCart()}\n                  >\n                    Checkout\n                  </Link>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './NavSliding.scss';\nimport { Icon } from '../Icon';\nimport { FavoritesContext } from '../Favorites';\nimport { SECTION_LINK, FOOTER_LINKS } from '../../helpers';\n\nexport const NavSliding = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { favorites } = useContext(FavoritesContext);\n\n  const handleNavSliding = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <nav className=\"NavSliding\">\n      <button\n        type=\"button\"\n        className={cn('NavSliding__Button', { 'NavSliding__Button--cross': isOpen })}\n        onClick={handleNavSliding}\n      >\n        <span className=\"NavSliding__ButtonLine\" />\n        <span className=\"NavSliding__ButtonLine\" />\n      </button>\n      <section className={cn('NavSliding__Block', { show: isOpen })}>\n        <div className=\"NavSliding__Illustration\" />\n        <div className=\"NavSliding__Content\">\n          <ul className=\"NavSliding__List--secondary\">\n            <li className=\"NavSliding__Item--secondary\">\n              <Link to=\"/favorites\" className=\"NavSliding__Icon\">\n                <Icon\n                  name=\"favorites\"\n                  tag={favorites.length}\n                  border={false}\n                  inActive={false}\n                />\n              </Link>\n            </li>\n            <li className=\"NavSliding__Item--secondary\">\n              <Link to=\"/cart\" className=\"NavSliding__Icon\">\n                <Icon\n                  name=\"shopping-bag\"\n                  border={false}\n                  inActive={false}\n                />\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"NavSliding__List\">\n            <li className=\"NavSliding__Item\">\n              <NavLink\n                to=\"/\"\n                exact\n                className=\"NavSliding__Link NavSliding__Link--primary\"\n                activeClassName=\"Nav__Link--active\"\n              >\n                Home\n              </NavLink>\n            </li>\n            {SECTION_LINK.map(({ name, url, exact }) => (\n              <li className=\"NavSliding__Item\" key={name}>\n                <NavLink\n                  to={url}\n                  exact={exact}\n                  className=\"NavSliding__Link NavSliding__Link--primary\"\n                  activeClassName=\"NavSliding__Link--active\"\n                >\n                  {name}\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n          <ul className=\"NavSliding__List--secondary\">\n            {FOOTER_LINKS.map(({ name, url }) => (\n              <li className=\"NavSliding__Item--secondary\" key={name}>\n                <NavLink\n                  to={url}\n                  className=\"NavSliding__Link NavSliding__Link--secondary\"\n                  activeClassName=\"NavSliding__Link--active\"\n                >\n                  {name}\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </section>\n    </nav>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Link, NavLink, Route } from 'react-router-dom';\n\nimport './Header.scss';\nimport { FavoritesContext } from '../Favorites';\nimport { Nav } from '../Nav';\nimport { Search } from '../Search';\nimport { Icon } from '../Icon';\nimport { SECTION_LINK } from '../../helpers';\nimport { CartContext } from '../Cart';\nimport { NavSliding } from '../NavSliding';\n\nexport const Header = () => {\n  const { favorites } = useContext(FavoritesContext);\n  const { cart } = useContext(CartContext);\n\n  return (\n    <header className=\"Header\" id=\"top\">\n      <Link to=\"/\" className=\"Header__Logo\">\n        <img src=\"./img/logo.svg\" alt=\"Logo\" />\n      </Link>\n      <div className=\"Header__HomeLink\">\n        <NavLink\n          to=\"/\"\n          exact\n          className=\"Nav__Link\"\n          activeClassName=\"Nav__Link--active\"\n        >\n          Home\n        </NavLink>\n      </div>\n      <Nav links={SECTION_LINK} className=\"Header__Nav\" />\n      <Route path=\"/:section\" exact component={Search} />\n      <Link to=\"/favorites\" className=\"Header__Button\">\n        <Icon\n          name=\"favorites\"\n          tag={favorites.length}\n          border={false}\n          inActive={false}\n        />\n      </Link>\n      <Link to=\"/cart\" className=\"Header__Button\">\n        <Icon\n          name=\"shopping-bag\"\n          tag={cart.length}\n          border={false}\n          inActive={false}\n        />\n      </Link>\n      <NavSliding />\n    </header>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Footer.scss';\nimport { Nav } from '../Nav';\nimport { Icon } from '../Icon';\nimport { FOOTER_LINKS } from '../../helpers';\n\nexport const Footer = () => {\n  const handleScroll = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <footer className=\"Footer\">\n      <div className=\"Footer__Content container\">\n        <Link to=\"/\" className=\"Footer__Logo\">\n          <img src=\"./images/logo.svg\" alt=\"Logo\" />\n        </Link>\n        <Nav links={FOOTER_LINKS} />\n        <Link\n          to=\"#top\"\n          className=\"Footer__Link\"\n          onClick={handleScroll}\n        >\n          Back to top\n          <Icon\n            name=\"arrow-up\"\n            size={2}\n            border\n            inActive={false}\n          />\n        </Link>\n      </div>\n    </footer>\n  );\n};\n","import React, { useContext } from 'react';\nimport './Buttons.scss';\nimport cn from 'classnames';\nimport { CartContext } from '../Cart';\n\ninterface Props {\n  text: string;\n  selected: boolean;\n  id: string;\n}\n\nexport const PrimaryButton: React.FC<Props> = ({ text, selected, id }) => {\n  const { selectGood } = useContext(CartContext);\n\n  return (\n    <button\n      type=\"button\"\n      className={cn({\n        Button: true,\n        Button__Primary: true,\n        'Button__Primary--selected': selected,\n      })}\n      onClick={() => selectGood(id)}\n    >\n      {text}\n    </button>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { FavoritesContext } from '../Favorites';\nimport { PrimaryButton } from '../Buttons';\nimport { Icon } from '../Icon';\nimport { CartContext } from '../Cart';\n\ninterface Props {\n  good: Good;\n}\n\nexport const GoodItem: React.FC<Props> = ({ good }) => {\n  const { section } = useParams();\n  const { isFavorite, addFavorite, removeFavorite } = useContext(FavoritesContext);\n  const { cart } = useContext(CartContext);\n\n  const handleFavorites = (selectedGood: Good) => {\n    if (isFavorite(selectedGood)) {\n      removeFavorite(selectedGood);\n    } else {\n      addFavorite(selectedGood);\n    }\n  };\n\n  return (\n    <article key={good.id} className=\"GoodsList__Item GoodItem\">\n      <Link to={`/${section}/${good.id}`} className=\"GoodItem__Link\">\n        <img\n          src={good.imageUrl}\n          alt={good.name}\n          className=\"GoodItem__Image\"\n        />\n        <h3 className=\"GoodItem__Heading\">\n          {good.name}\n        </h3>\n      </Link>\n\n      <section className=\"GoodItem__Price\">\n        <span className=\"GoodItem__Price--actual\">\n          {(good.discount > 0)\n            ? good.price - ((good.price / 100) * good.discount)\n            : good.price}\n        </span>\n        {(good.discount > 0) && (\n          <span className=\"GoodItem__Price--full\">\n            {good.price}\n          </span>\n        )}\n      </section>\n\n      <section className=\"GoodItem__PropsList\">\n        <div className=\"GoodItem__PropsItem\">\n          <span className=\"GoodItem__PropsItem--title\">Screen</span>\n          <span className=\"GoodItem__PropsItem--value\">\n            {good.screen ? good.screen : '-'}\n          </span>\n        </div>\n\n        <div className=\"GoodItem__PropsItem\">\n          <span className=\"GoodItem__PropsItem--title\">Capacity</span>\n          <span className=\"GoodItem__PropsItem--value\">\n            {good.capacity ? good.capacity : '-'}\n          </span>\n        </div>\n\n        <div className=\"GoodItem__PropsItem\">\n          <span className=\"GoodItem__PropsItem--title\">RAM</span>\n          <span className=\"GoodItem__PropsItem--value\">\n            {good.ram ? good.ram : '-'}\n          </span>\n        </div>\n      </section>\n\n      <section className=\"GoodItem__Buttons\">\n        <div className=\"GoodItem__Buttons--main\">\n          <PrimaryButton\n            text={cart.some(prod => prod.id === good.id)\n              ? 'Remove from cart'\n              : 'Add to cart'}\n            selected={cart.some(prod => prod.id === good.id)}\n            id={good.id}\n          />\n        </div>\n        <label onClick={() => handleFavorites(good)}>\n          <Icon name={isFavorite(good) ? 'favorites-filled' : 'favorites'} border inActive={false} />\n        </label>\n      </section>\n    </article>\n  );\n};\n","import React from 'react';\n\nimport './GoodsList.scss';\nimport { GoodItem } from './GoodItem';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <div className=\"GoodsList\">\n    {goods.map(good => (\n      <GoodItem good={good} key={good.id} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport {\n  useLocation,\n  Redirect,\n  useHistory,\n} from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './Pagination.scss';\n\ninterface Props {\n  qty: number;\n  perPage: number;\n}\n\nexport const Pagination: React.FC<Props> = ({ qty, perPage }) => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const currentPage = Number(searchParams.get('page'));\n  const currentSort = searchParams.get('sortBy');\n  const pages = Array(Math.ceil(qty / Number(perPage))).fill(0, 0, qty).map((p, i) => p + i + 1);\n\n  const handleClick = (page: number) => {\n    currentSort && searchParams.set('sortBy', currentSort);\n    searchParams.set('page', `${page}`);\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  if (currentPage <= 0) {\n    return (\n      <Redirect\n        to={{\n          pathname: `${location.pathname}`,\n          search: `?page=1&perPage=${perPage}`,\n        }}\n      />\n    );\n  }\n\n  if (currentPage > pages.length) {\n    return (\n      <Redirect\n        to={{\n          pathname: `${location.pathname}`,\n          search: `?page=${pages.length}&perPage=${perPage}`,\n        }}\n      />\n    );\n  }\n\n  const getArrow = (type: string) => {\n    if (type === 'prev' && currentPage > 1) {\n      return (\n        <button\n          type=\"button\"\n          className=\"Pagination__Button Pagination__Button--arrow-left\"\n          onClick={() => handleClick(currentPage - 1)}\n        />\n      );\n    }\n\n    if (type === 'prev') {\n      return (\n        <div className=\"\n          Pagination__Button\n          Pagination__Button--arrow-left\n          Pagination__Button--disabled\"\n        />\n      );\n    }\n\n    if (type === 'next' && currentPage < pages.length) {\n      return (\n        <button\n          type=\"button\"\n          className=\"Pagination__Button Pagination__Button--arrow-right\"\n          onClick={() => handleClick(currentPage + 1)}\n        />\n      );\n    }\n\n    if (type === 'next') {\n      return (\n        <div className=\"\n          Pagination__Button\n          Pagination__Button--arrow-right\n          Pagination__Button--disabled\"\n        />\n      );\n    }\n\n    return '';\n  };\n\n  return (\n    <nav className=\"Pagination\">\n      <ul className=\"Pagination__List\">\n        <li className=\"Pagination__Item\">\n          {getArrow('prev')}\n        </li>\n        {pages.map(page => (\n          <li className=\"Pagination__Item\" key={page}>\n            <button\n              type=\"button\"\n              className={cn({\n                Pagination__Button: true,\n                'Pagination__Button--active': page === currentPage,\n              })}\n              onClick={() => handleClick(page)}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n        <li className=\"Pagination__Item\">\n          {getArrow('next')}\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Props {\n  options: PerPage[];\n}\n\nexport const SelectPerPage: React.FC<Props> = ({ options }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const currentPerPage = searchParams.get('perPage');\n  const currentOption = options.find(option => option.name === currentPerPage) || options[0];\n  const [isOpen, setIsOpen] = useState(false);\n\n  const chooseSelectValue = (option: PerPage) => {\n    searchParams.set('perPage', option.name);\n    searchParams.set('page', '1');\n    history.push({\n      search: searchParams.toString(),\n    });\n\n    setIsOpen(false);\n  };\n\n  const clickSubscribe = () => {\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      document.documentElement.removeEventListener('click', clickSubscribe);\n    } else {\n      document.documentElement.addEventListener('click', clickSubscribe);\n    }\n  }, [isOpen]);\n\n  return (\n    <div\n      className={cn({\n        Select: true,\n        Select__Closest: !isOpen,\n      })}\n    >\n      <label\n        className={cn({\n          'Select__Active--after': isOpen,\n        })}\n      />\n\n      <button\n        type=\"button\"\n        className={cn({\n          Select__Active: true,\n          'Select__Active--opened': isOpen,\n        })}\n        onClick={() => setIsOpen(true)}\n      >\n        {currentOption.name}\n        <span>\n          <div className={cn({\n            Select__Arrow: true,\n            'Select__Arrow--opened': isOpen,\n          })}\n          />\n        </span>\n      </button>\n      <ul className={cn({\n        Select__List: true,\n        'Select__List--opened': isOpen,\n      })}\n      >\n        {options.map(option => (\n          option.name !== currentOption.name && (\n            <li\n              key={option.name}\n              className=\"Select__Item\"\n              data-value={option.name}\n              onClick={() => chooseSelectValue(option)}\n            >\n              {option.name}\n            </li>\n          )\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './NotAvailable.scss';\n\nexport const NotAvailable = () => (\n  <div className=\"NotAvailable\">\n    <img\n      src=\"images/notAvailable.jpg\"\n      alt=\"Goods not found\"\n      className=\"NotAvailable__Image\"\n    />\n  </div>\n);\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './Select.scss';\n\ninterface Props {\n  options: SortType[];\n}\n\nexport const Select: React.FC<Props> = ({ options }) => {\n  const defaultSortType = options.find(item => item.isDefault) || options[0];\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const currentSortType = useMemo(\n    () => searchParams.get('sortBy') || defaultSortType,\n    [searchParams, defaultSortType],\n  );\n  const currentPerPage = useMemo(() => searchParams.get('perPage'), [searchParams]);\n\n  const currentOption = options.find(option => option.type === currentSortType) || defaultSortType;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const chooseSelectValue = (option: SortType) => {\n    searchParams.set('sortBy', option.type);\n    searchParams.set('page', '1');\n\n    if (currentPerPage) {\n      searchParams.set('perPage', currentPerPage);\n    }\n\n    history.push({\n      search: searchParams.toString(),\n    });\n\n    setIsOpen(false);\n  };\n\n  const clickSubscribe = () => {\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      document.documentElement.removeEventListener('click', clickSubscribe);\n    } else {\n      document.documentElement.addEventListener('click', clickSubscribe);\n    }\n  }, [isOpen]);\n\n  return (\n    <div\n      className={cn({\n        Select: true,\n        Select__Closest: !isOpen,\n      })}\n    >\n      <label\n        className={cn({\n          'Select__Active--after': isOpen,\n        })}\n      />\n\n      <button\n        type=\"button\"\n        className={cn({\n          Select__Active: true,\n          'Select__Active--opened': isOpen,\n        })}\n        onClick={() => setIsOpen(true)}\n      >\n        {currentOption.name}\n        <span>\n          <div className={cn({\n            Select__Arrow: true,\n            'Select__Arrow--opened': isOpen,\n          })}\n          />\n        </span>\n      </button>\n      <ul className={cn({\n        Select__List: true,\n        'Select__List--opened': isOpen,\n      })}\n      >\n        {options.map(option => (\n          option.type !== currentOption.type && (\n            <li\n              key={option.name}\n              className=\"Select__Item\"\n              data-value={option.type}\n              onClick={() => chooseSelectValue(option)}\n            >\n              {option.name}\n            </li>\n          )\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport './GoodsSection.scss';\nimport { GoodsList } from '../GoodsList';\nimport { Pagination, SelectPerPage } from '../Pagination';\nimport { NotAvailable } from '../NotAvailable';\nimport {\n  sortBy,\n  SECTION_LINK,\n  SORT_TYPES,\n  PER_PAGE_SETTINGS,\n} from '../../helpers';\nimport { Select } from '../Select';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodsSection: React.FC<Props> = ({ goods }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const query = searchParams.get('query')?.toLowerCase() || '';\n  const currentPage = Number(searchParams.get('page'));\n  const perPageDefault = PER_PAGE_SETTINGS[0].name;\n  const perPageParam = useMemo(() => searchParams.get('perPage'), [searchParams]);\n  let perPage = Number(perPageDefault);\n\n  if (PER_PAGE_SETTINGS.find(item => item.name === perPageParam)) {\n    perPage = Number(PER_PAGE_SETTINGS.find(item => item.name === perPageParam)?.name);\n  } else {\n    searchParams.set('perPage', perPageDefault);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }\n\n  const sortParam = searchParams.get('sortBy');\n  const sortType = SORT_TYPES.find((sort: SortType) => sort.type === sortParam) || SORT_TYPES[1];\n\n  if (!sortType) {\n    searchParams.set('sortBy', SORT_TYPES[1].type);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }\n\n  const { section } = useParams();\n  const sectionProp = SECTION_LINK.find(link => link.url === `/${section}`);\n\n  const filteredGoods = useMemo(\n    () => goods.filter(good => good.type === sectionProp?.type),\n    [goods, sectionProp],\n  );\n\n  const searchedGoods = useMemo(\n    () => filteredGoods.filter(good => {\n      return `${good.name} ${good.snippet}`.toLowerCase().includes(query);\n    }),\n    [query, filteredGoods],\n  );\n\n  const sortedGoods = useMemo(\n    () => sortBy(searchedGoods, sortType),\n    [searchedGoods, sortType],\n  );\n\n  const paginatedGoods = sortedGoods.slice(\n    (currentPage || 1) * perPage - perPage,\n    (currentPage || 1) * perPage,\n  );\n\n  console.log(sortedGoods.length);\n\n  return (\n    <>\n      {sortedGoods.length === 0 && (\n        <NotAvailable />\n      )}\n      {sortedGoods.length >= 1 && (\n        <section className=\"section GoodsSection\">\n          <Helmet>\n            <title>{sectionProp?.title || sectionProp?.name}</title>\n          </Helmet>\n          <h1 className=\"GoodsSection__Heading\">\n            {sectionProp?.title || sectionProp?.name}\n          </h1>\n          <div className=\"GoodsSection__Qty\">{`${filteredGoods.length} models`}</div>\n\n          <div className=\"GoodsSection__Control\">\n            {filteredGoods.length > 1 && (\n              <>\n                <div className=\"GoodsSection__Select\">\n                  <div className=\"GoodsSection__SelectName\">\n                    Sort by\n                  </div>\n                  <Select options={SORT_TYPES} />\n                </div>\n\n                <div className=\"GoodSection__Select\">\n                  <div className=\"GoodsSection__SelectName\">\n                    Items on page\n                  </div>\n                  <SelectPerPage options={PER_PAGE_SETTINGS} />\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"GoodsSection__Container\">\n            <GoodsList goods={paginatedGoods} />\n          </div>\n          {searchedGoods.length > perPage && (\n            <div className=\"Pagination\">\n              <Pagination qty={searchedGoods.length} perPage={perPage} />\n            </div>\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  goodInfo: Good | undefined;\n  goodDetail: GoodDetail;\n}\n\nexport const GoodTechInfo: React.FC<Props> = ({ goodInfo, goodDetail }) => (\n  <ul className=\"GoodPage__InfoList\">\n    <li className=\"GoodPage__InfoItem\">\n      <p className=\"GoodPage__InfoTitle\">\n        Screen\n      </p>\n      <p className=\"GoodPage__InfoFeature\">\n        {goodInfo && (goodInfo.screen || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__InfoItem\">\n      <p className=\"GoodPage__InfoTitle\">\n        Resolution\n      </p>\n      <p className=\"GoodPage__InfoFeature\">\n        {goodDetail && (goodDetail.display.screenResolution || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__InfoItem\">\n      <p className=\"GoodPage__InfoTitle\">\n        Processor\n      </p>\n      <p className=\"GoodPage__InfoFeature\">\n        {goodDetail && (goodDetail.hardware.cpu || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__InfoItem\">\n      <p className=\"GoodPage__InfoTitle\">\n        RAM\n      </p>\n      <p className=\"GoodPage__InfoFeature\">\n        {goodInfo && (goodInfo.ram || 'No info')}\n      </p>\n    </li>\n  </ul>\n);\n","import React from 'react';\n\ninterface Props {\n  goodInfo: Good | undefined;\n  goodDetail: GoodDetail;\n}\n\nexport const GoodSpecsInfo: React.FC<Props> = ({ goodInfo, goodDetail }) => (\n  <ul className=\"GoodPage__SpecsList\">\n    <li className=\"GoodPage__SpecsItem\">\n      <p className=\"GoodPage__SpecsTitle\">\n        Screen\n      </p>\n      <p className=\"GoodPage__SpecsFeature\">\n        {goodInfo && (goodInfo.screen || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__SpecsItem\">\n      <p className=\"GoodPage__SpecsTitle\">\n        Resolution\n      </p>\n      <p className=\"GoodPage__SpecsFeature\">\n        {goodDetail && (goodDetail.display.screenResolution || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__SpecsItem\">\n      <p className=\"GoodPage__SpecsTitle\">\n        Processor\n      </p>\n      <p className=\"GoodPage__SpecsFeature\">\n        {goodDetail && (goodDetail.hardware.cpu || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__SpecsItem\">\n      <p className=\"GoodPage__SpecsTitle\">\n        RAM\n      </p>\n      <p className=\"GoodPage__SpecsFeature\">\n        {goodInfo && (goodInfo.ram || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__SpecsItem\">\n      <p className=\"GoodPage__SpecsTitle\">\n        Built in memory\n      </p>\n      <p className=\"GoodPage__SpecsFeature\">\n        {goodInfo && (goodInfo.capacity || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__SpecsItem\">\n      <p className=\"GoodPage__SpecsTitle\">\n        Camera\n      </p>\n      <p className=\"GoodPage__SpecsFeature\">\n        {goodDetail && (goodDetail.camera.primary || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__SpecsItem\">\n      <p className=\"GoodPage__SpecsTitle\">\n        Zoom\n      </p>\n      <p className=\"GoodPage__SpecsFeature\">\n        {goodDetail && (goodDetail.camera.zoom || 'No info')}\n      </p>\n    </li>\n    <li className=\"GoodPage__SpecsItem\">\n      <p className=\"GoodPage__SpecsTitle\">\n        Cell\n      </p>\n      <p className=\"GoodPage__SpecsFeature\">\n        {goodDetail && (goodDetail.connectivity.cell || 'No info')}\n      </p>\n    </li>\n  </ul>\n);\n","import React, { useState, useRef } from 'react';\nimport cn from 'classnames';\nimport { GoodItem } from '../GoodsList';\nimport './CardSlider.scss';\n\ninterface Props {\n  goods: Good[];\n  title: string;\n}\n\nexport const CardSlider: React.FC<Props> = ({ goods, title }) => {\n  const [left, setLeft] = useState(0);\n  const myRef = useRef<HTMLDivElement>(null);\n  const cardWidth = 272;\n  const cardGap = 16;\n  const cardsOnOneMoment = 4;\n  const cardsLength = goods.length;\n  const [position, setPosition] = useState(cardsOnOneMoment);\n\n  const handleSlider = (path: number) => {\n    const newLeftPosition = (cardWidth + cardGap) * -path;\n\n    setLeft(left + newLeftPosition);\n    setPosition(position + path);\n  };\n\n  return (\n    <div\n      className=\"Card__Container\"\n      style={{\n        width: `${(cardWidth * cardsOnOneMoment) + (cardGap * (cardsOnOneMoment - 1))}px`,\n      }}\n      ref={myRef}\n    >\n      <div className=\"Card__Title-site\">\n        <div>\n          <h2 className=\"Card__Title\">{title}</h2>\n        </div>\n        <div className=\"Card__Buttons\">\n          <button\n            className=\"Card__Button\"\n            type=\"button\"\n            onClick={() => handleSlider(-1)}\n            disabled={position === cardsOnOneMoment}\n          >\n            <div\n              className={cn({\n                'Card__Button--arrow-left': true,\n                'Card__Button--arrow': true,\n                'Card__Button--arrow--disabled': position === cardsOnOneMoment,\n              })}\n            />\n          </button>\n          <button\n            className=\"Card__Button\"\n            type=\"button\"\n            onClick={() => handleSlider(1)}\n            disabled={position === cardsLength}\n          >\n            <div\n              className={cn({\n                'Card__Button--arrow-right': true,\n                'Card__Button--arrow': true,\n                'Card__Button--arrow--disabled': position === cardsLength,\n              })}\n            />\n          </button>\n        </div>\n      </div>\n      <ul\n        className=\"Card\"\n        style={{\n          transform: `translateX(${left}px)`,\n        }}\n      >\n        {goods.map(card => (\n          <li\n            key={card.id}\n            className=\"Card__Item\"\n            style={{\n              width: `${cardWidth}px`,\n            }}\n          >\n            <GoodItem good={card} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './LoadSpinner.scss';\n\nexport const LoadSpinner = () => (\n  <div className=\"lds-roller\">\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React, {\n  useState, useEffect, useMemo, useContext,\n} from 'react';\nimport { useParams, useRouteMatch, Redirect } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport cn from 'classnames';\n\nimport './GoodPage.scss';\nimport { PrimaryButton } from '../Buttons';\nimport { Icon } from '../Icon';\nimport { getGoodDetail, SECTION_LINK, sliderFilter } from '../../helpers';\nimport { GoodTechInfo } from './GoodTechInfo';\nimport { GoodSpecsInfo } from './GoodSpecsInfo';\nimport { CardSlider } from '../CardSlider/CardSlider';\nimport { LoadSpinner } from '../LoadSpinner';\nimport { CartContext } from '../Cart';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodPage: React.FC<Props> = ({ goods }) => {\n  const { good } = useParams();\n  const match: Match = useRouteMatch();\n  const [goodDetail, setGoodDetail] = useState<GoodDetail>();\n  const [goodInfo, setGoodInfo] = useState<Good>();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [activeImageIndex, setActiveImageIndex] = useState(0);\n\n  const currentType = goods.find(phone => goodDetail && phone.id === goodDetail.id);\n  const sliderItems = sliderFilter(goods, 'alsoLike', match.params.good);\n  const { cart } = useContext(CartContext);\n\n  const loadGoodDetail = async (goodId: string) => {\n    setIsLoading(true);\n    setErrorMessage('');\n\n    try {\n      const data = await getGoodDetail(goodId);\n      const preparedGoodDetail = { ...data };\n\n      setGoodDetail(preparedGoodDetail);\n      setIsLoaded(true);\n    } catch (error) {\n      setErrorMessage(String(error));\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    if (goods.length) {\n      const goodInfo = goods.find(item => item.id === match.params.good);\n\n      setGoodInfo(goodInfo);\n    }\n  }, [goods]);\n\n  useEffect(() => {\n    loadGoodDetail(good);\n  }, [good]);\n\n  const handleImages = (e: React.MouseEvent<HTMLElement>, i: number) => {\n    e.preventDefault();\n    setActiveImageIndex(i);\n  };\n\n  const price = useMemo(\n    () => (goodInfo && goodInfo.discount > 0\n      ? goodInfo.price - ((goodInfo.price / 100) * goodInfo.discount)\n      : goodInfo && goodInfo.price),\n    [goodInfo],\n  );\n\n  if (match.params.section === 'undefined' && goods && currentType) {\n    const typeParam = SECTION_LINK.find(section => section.type === currentType.type);\n\n    if (typeParam) {\n      return <Redirect to={`${typeParam.url}/${match.params.good}`} />;\n    }\n  }\n\n  return (\n    <>\n      <section className=\"section\">\n\n        {errorMessage && <div>{errorMessage}</div>}\n        {isLoading\n          && (\n            <div className=\"GoodPage__Loading\">\n              <LoadSpinner />\n            </div>\n          )}\n        {isLoading && isLoaded && ''}\n        {goodDetail && (\n          <article className=\"GoodPage\">\n            <Helmet>\n              <title>{goodDetail.name}</title>\n            </Helmet>\n            <h1 className=\"GoodPage__Heading\">{goodDetail.name}</h1>\n            <div className=\"GoodPage__Content\">\n              <div className=\"GoodPage__Column\">\n                <section className=\"GoodPage__Images\">\n                  <ul className=\"GoodPage__ImageList\">\n                    {goodDetail.images.map((image, i) => (\n                      <li\n                        className={cn({\n                          'GoodPage__Image--current': i === activeImageIndex,\n                        },\n                        'GoodPage__ImageItem')}\n                        key={image}\n                      >\n                        <a href=\"./#\" onClick={e => handleImages(e, i)}>\n                          <img\n                            src={image}\n                            alt={goodDetail.name}\n                            className=\"GoodPage__Image\"\n                          />\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                  <img\n                    src={goodDetail.images[activeImageIndex]}\n                    alt={goodDetail.name}\n                    className=\"GoodPage__ImageBig\"\n                  />\n                </section>\n              </div>\n              <div className=\"GoodPage__Column\">\n                <span className=\"GoodPage__Id\">\n                  ID:\n                  {' '}\n                  {goodInfo && goodInfo.id}\n                </span>\n                <section className=\"GoodPage__NarrowBlock\">\n                  <div className=\"GoodPage__Price\">\n                    <span className=\"GoodPage__Price--actual\">\n                      {price}\n                    </span>\n                    {(goodInfo && goodInfo.discount > 0) && (\n                      <span className=\"GoodPage__Price--full\">\n                        {goodInfo.price}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"GoodPage__Buttons\">\n                    <div className=\"GoodPage__Buttons--main\">\n                      <PrimaryButton\n                        text={cart.some(prod => prod.id === match.params.good)\n                          ? 'Remove from cart'\n                          : 'Add to cart'}\n                        selected={cart.some(prod => prod.id === match.params.good)}\n                        id={match.params.good}\n                      />\n                    </div>\n                    <div className=\"GoodPage__Buttons--favorites\">\n                      <Icon\n                        name=\"favorites\"\n                        border\n                        inActive={false}\n                      />\n                    </div>\n                  </div>\n                </section>\n                <section className=\"GoodPage__Info\">\n                  <GoodTechInfo\n                    goodDetail={goodDetail}\n                    goodInfo={goodInfo}\n                  />\n                </section>\n              </div>\n\n              <div className=\"GoodPage__Column\">\n                <section className=\"GoodPage__Description\">\n                  <h2 className=\"GoodPage__SubHeading\">About</h2>\n                  {goodInfo && goodInfo.snippet}\n                  <div className=\"GoodPage__MoreInfo\">\n                    <h3 className=\"GoodPage__MoreInfo--SubHeading\">More info</h3>\n                    {goodDetail && goodDetail.description}\n                  </div>\n                </section>\n              </div>\n\n              <div className=\"GoodPage__Column\">\n                <section className=\"GoodPage__TechSpecs\">\n                  <h2 className=\"GoodPage__SubHeading\">Tech specs</h2>\n                  <ul>\n                    <GoodSpecsInfo\n                      goodDetail={goodDetail}\n                      goodInfo={goodInfo}\n                    />\n                  </ul>\n                </section>\n              </div>\n            </div>\n          </article>\n        )}\n      </section>\n      <div className=\"GoodPage__Slider\">\n        <CardSlider goods={sliderItems} title=\"You may also like\" />\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './Banner.scss';\nimport cn from 'classnames';\n\nimport { Banners } from '../../helpers';\n\nexport const BannerSlider: React.FC = () => {\n  const bannerImages = Banners.map((image, i) => ({\n    ...image,\n    position: i + 1,\n  }));\n\n  const [currentPosition, setcurrentPosition] = useState(1);\n  const [left, setLeft] = useState(0);\n  const imageWidth = 1040;\n  const imageGap = 16;\n\n  const handleSlide = (path: number) => {\n    const newLeftPosition = (imageWidth + imageGap) * -path;\n\n    if (currentPosition === bannerImages.length && path === 1) {\n      setcurrentPosition(1);\n      setLeft(0);\n\n      return;\n    }\n\n    if (currentPosition === 1 && path === -1) {\n      setcurrentPosition(bannerImages.length);\n      setLeft(((imageWidth + imageGap) * path) * (bannerImages.length - 1));\n\n      return;\n    }\n\n    setcurrentPosition(currentPosition + path);\n    setLeft(left + newLeftPosition);\n  };\n\n  const chooseImages = (position: number) => {\n    if (position === 1) {\n      setLeft(0);\n      setcurrentPosition(1);\n\n      return;\n    }\n\n    const newLoeftPosition = (((position - 1) * imageWidth) + ((position - 1) * imageGap)) * -1;\n\n    setLeft(newLoeftPosition);\n    setcurrentPosition(position);\n  };\n\n  return (\n    <div className=\"Banner\">\n      <div className=\"Banner__Slider\">\n        <button\n          type=\"button\"\n          className=\"Banner__Button\"\n          onClick={() => handleSlide(-1)}\n        >\n          <div className=\"Banner__Image Banner__Image--arrow-left\" />\n        </button>\n\n        <div className=\"Banner__Container\">\n          <ul\n            className=\"Banner__Content\"\n            style={{\n              transform: `translateX(${left}px)`,\n            }}\n          >\n            {bannerImages.map(image => (\n              <li\n                className=\"Banner__Content-image\"\n                key={image.position}\n              >\n                <img\n                  src={image.path}\n                  alt={image.alt}\n                  className=\"Banner__Image--current\"\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"Banner__Button\"\n          onClick={() => handleSlide(1)}\n        >\n          <div className=\"Banner__Image Banner__Image--arrow-right\" />\n        </button>\n      </div>\n      <div className=\"Banner__Position-container\">\n        {bannerImages.map(image => (\n          <span\n            key={image.position}\n            className={cn({\n              'Banner__Position--active': image.position === currentPosition,\n            },\n            'Banner__Position')}\n            onClick={() => chooseImages(image.position)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './ShopCategory.scss';\nimport { Link } from 'react-router-dom';\nimport { SECTION_LINK } from '../../helpers';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const ShopCategory: React.FC<Props> = ({ goods }) => (\n  <div className=\"Category\">\n    <h2 className=\"Category__Title\">\n      Shop by category\n    </h2>\n    <div className=\"Category__Container\">\n      <ul className=\"Category__List\">\n        {SECTION_LINK.map(link => (\n          <li\n            className=\"Category__Item\"\n            key={link.name}\n          >\n            <Link to={link.url} className=\"Category__Link\">\n              <div\n                className=\"Category__ImageContainer\"\n              >\n                <img\n                  src={link.imgUrl}\n                  alt={link.title}\n                  className=\"Category__Image\"\n                />\n              </div>\n\n              <div className=\"Category__Info\">\n                <h3 className=\"Category__InfoType Category__Paragraph\">\n                  {link.title}\n                </h3>\n                <p className=\"Category__InfoCount Category__Paragraph\">\n                  {goods.filter(card => card.type === link.type).length}\n                  {' models'}\n                </p>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { BannerSlider } from '../Banner';\nimport { CardSlider } from '../CardSlider';\nimport { sliderFilter, SLIDER_FILTER_TYPE } from '../../helpers';\nimport { ShopCategory } from '../ShopCategory';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const HomePage: React.FC<Props> = ({ goods }) => {\n  const hotPrices = sliderFilter(goods, SLIDER_FILTER_TYPE.hotPrice, '');\n  const highPrices = sliderFilter(goods, SLIDER_FILTER_TYPE.newModels, '');\n\n  return (\n    <>\n      <Helmet>\n        <title>Phone Store</title>\n      </Helmet>\n      <BannerSlider />\n      <CardSlider goods={hotPrices} title=\"Hot prices\" />\n      <ShopCategory goods={goods} />\n      <CardSlider goods={highPrices} title=\"Brand new models\" />\n    </>\n  );\n};\n","import React, { useContext, useMemo } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport { FavoritesContext } from './FavoritesContext';\nimport { GoodsList } from '../GoodsList';\nimport { Pagination, SelectPerPage } from '../Pagination';\nimport { PER_PAGE_SETTINGS } from '../../helpers';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const Favorites: React.FC<Props> = ({ goods }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const { favorites } = useContext(FavoritesContext);\n  const favoritesProducts = useMemo(\n    () => [...goods].filter(product => favorites.some(id => id === product.id)),\n    [favorites, goods],\n  );\n\n  const currentPage = Number(searchParams.get('page'));\n  const perPageDefault = PER_PAGE_SETTINGS[0].name;\n  const perPageParam = useMemo(() => searchParams.get('perPage'), [searchParams]);\n  let perPage = Number(perPageDefault);\n\n  if (PER_PAGE_SETTINGS.find(item => item.name === perPageParam)) {\n    perPage = Number(PER_PAGE_SETTINGS.find(item => item.name === perPageParam)?.name);\n  } else {\n    searchParams.set('perPage', perPageDefault);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }\n\n  const paginatedGoods = favoritesProducts.slice(\n    (currentPage || 1) * perPage - perPage,\n    (currentPage || 1) * perPage,\n  );\n\n  return (\n    <section className=\"section GoodsSection\">\n      <Helmet>\n        <title>Favorite Goods</title>\n      </Helmet>\n      <h1 className=\"GoodsSection__Heading\">\n        Favorite Goods\n      </h1>\n      <div className=\"GoodsSection__Qty\">{`${favorites.length} items`}</div>\n      <div className=\"GoodsSection__Control\">\n        {favoritesProducts.length > 1 && (\n          <div className=\"GoodSection__Select\">\n            <div className=\"GoodsSection__SelectName\">\n              Items on page\n            </div>\n            <SelectPerPage options={PER_PAGE_SETTINGS} />\n          </div>\n        )}\n      </div>\n      <GoodsList goods={paginatedGoods} />\n      {favoritesProducts.length > perPage && (\n        <div className=\"Pagination\">\n          <Pagination qty={favoritesProducts.length} perPage={perPage} />\n        </div>\n      )}\n    </section>\n  );\n};\n","import React from 'react';\nimport './Checkout.scss';\nimport { Link } from 'react-router-dom';\n\nexport const Checkout: React.FC = () => {\n  return (\n    <div className=\"Checkout\">\n      <h1 className=\"Checkout__Title\">\n        Thank you for purchase\n      </h1>\n      <div className=\"Checkout__BackToShop\">\n        <Link className=\"Checkout__Link\" to=\"/\">\n          Go to shop\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './App.scss';\nimport { getGoods } from './helpers';\nimport { FavoritesContextWrapper } from './components/Favorites';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport { GoodsSection } from './components/GoodsSection';\nimport { GoodPage } from './components/GoodPage';\nimport { HomePage } from './components/HomePage';\nimport { Favorites } from './components/Favorites/Favorites';\nimport { Cart, CartContextWrapper } from './components/Cart';\nimport { Checkout } from './components/Checkout';\n\nexport const App = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const loadGoods = async () => {\n    setIsLoading(true);\n    setErrorMessage('');\n\n    try {\n      const data = await getGoods();\n      const preparedData = data.filter(product => product.type);\n\n      setGoods(preparedData);\n      setIsLoaded(true);\n    } catch (error) {\n      setErrorMessage(String(error));\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadGoods();\n  }, []);\n\n  return (\n    <>\n      <CartContextWrapper>\n        <FavoritesContextWrapper>\n          <Header />\n          <div className=\"container\">\n            {errorMessage && <div>{errorMessage}</div>}\n            {isLoading && isLoaded && ''}\n            <Switch>\n              <Route path=\"/\" exact render={() => <HomePage goods={goods} />} />\n              <Route path=\"/favorites\" render={() => <Favorites goods={goods} />} />\n              <Route path=\"/cart\" exact render={() => <Cart goods={goods} />} />\n              <Route path=\"/checkout\" exact render={() => <Checkout />} />\n              <Route path=\"/:section\" exact render={() => <GoodsSection goods={goods} />} />\n              <Route path=\"/:section/:good\" exact render={() => <GoodPage goods={goods} />} />\n            </Switch>\n          </div>\n        </FavoritesContextWrapper>\n      </CartContextWrapper>\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}