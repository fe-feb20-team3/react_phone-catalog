{"version":3,"sources":["store/loading.ts","store/loaded.ts","store/error.ts","store/goods.ts","store/favorites.ts","store/cart.ts","helpers/api.ts","store/index.ts","components/Nav/Nav.tsx","helpers/config.ts","helpers/sort.ts","helpers/sliderFilter.ts","helpers/techInfo.ts","helpers/sitemap.ts","components/Search/Search.tsx","helpers/debounce.ts","components/Icon/Icon.tsx","components/NavSliding/NavSliding.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","components/Buttons/PrimaryButton.tsx","components/GoodsList/GoodItem.tsx","components/GoodsList/GoodsList.tsx","components/Pagination/Pagination.tsx","components/Pagination/SelectPerPage.tsx","components/NotAvailable/NotAvailable.tsx","components/Select/Select.tsx","components/NotFound/NotFound.tsx","components/GoodsSection/GoodsSection.tsx","components/GoodPage/GoodTechInfo.tsx","components/GoodPage/GoodSpecsInfo.tsx","components/CardSlider/CardSlider.tsx","components/LoadSpinner/LoadSpinner.tsx","components/GoodPage/GoodPage.tsx","components/Banner/Banner.tsx","components/ShopCategory/ShopCategory.tsx","components/HomePage/HomePage.tsx","components/Favorites/Favorites.tsx","components/Cart/Cart.tsx","components/Checkout/Checkout.tsx","components/Breadcrumbs/Breadcrumbs.tsx","components/BackToTop/BackToTop.tsx","App.tsx","index.tsx"],"names":["reducer","loading","action","type","loaded","errorMessage","goods","addFavorite","favorite","removeFavorite","id","initFavorites","localStorage","getItem","JSON","parse","favorites","filter","deleteCartGoods","changeCount","path","initCart","cart","count","good","map","info","API_URL","getData","url","a","fetch","response","json","fetchGoods","phones","fetchGoodDetail","goodDetail","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","loadingReducer","loadedReducer","errordReducer","goodsReducer","favoritesReducer","cartReducer","getGoods","state","getFavorites","getCartGoods","store","createStore","applyMiddleware","thunk","Nav","links","className","name","exact","external","key","href","target","rel","to","activeClassName","Banners","alt","PER_PAGE_SETTINGS","SLIDER_FILTER_TYPE","ITEM_TECH_INFO","order","ITEM_TECH_SPECS","SORT_TYPES","field","typeField","isReverse","isDefault","sliderFilter","cards","filterType","card","price","discount","sort","b","aDiscountPrice","slice","Math","random","age","techInfo","goodInfo","param","value","screen","ram","capacity","display","screenResolution","hardware","cpu","camera","primary","zoom","connectivity","cell","SECTION_LINKS","title","imgUrl","STATIC_PAGES","SERVICE_PAGES","FOOTER_LINKS","Search","history","useHistory","location","useLocation","section","useParams","isSection","some","item","searchParams","URLSearchParams","search","query","get","useState","visibleQuery","setVisibleQuery","searchInput","useRef","useEffect","current","focus","updateQuery","useCallback","f","delay","timerId","clearTimeout","args","setTimeout","debounce","actualQuery","delete","set","push","toString","onSubmit","e","preventDefault","htmlFor","placeholder","ref","onChange","cn","Search__Button","length","onClick","Icon","tag","size","border","inActive","Icon__Border","Number","NavSliding","isOpen","setIsOpen","useSelector","show","Header","src","component","Footer","PrimaryButton","dispatch","useDispatch","status","Button","Button__Primary","addCartGoods","GoodItem","isFavorite","useMemo","goodId","imageUrl","selectedGood","GoodsList","Pagination","qty","perPage","currentPage","pathname","currentSort","pages","Array","ceil","fill","p","i","handleClick","page","getArrow","Pagination__Button","SelectPerPage","options","currentPerPage","currentOption","find","option","clickSubscribe","document","documentElement","addEventListener","removeEventListener","Select","Select__Closest","Select__Active","Select__Arrow","Select__List","data-value","chooseSelectValue","NotAvailable","defaultSortType","currentSortType","NotFound","GoodsSection","toLowerCase","defaultPerPage","perPageParam","sortParam","sortType","sectionProp","link","filteredGoods","searchedGoods","snippet","includes","sortedGoods","direction","String","localeCompare","sortBy","paginatedGoods","Helmet","GoodTechInfo","GoodSpecsInfo","CardSlider","left","setLeft","myWidth","cardsOnOneMoment","setCardsOnOneMoment","cardWidth","setCardWidth","cardsLength","position","setPosition","handleSlider","containerWidth","offsetWidth","visibleCardsQTY","floor","visibleCardWidth","disabled","style","transform","width","LoadSpinner","GoodPage","match","useRouteMatch","setGoodDetail","setGoodInfo","setErrorMessage","isLoading","setIsLoading","isLoaded","setIsLoaded","activeImageIndex","setActiveImageIndex","currentType","phone","sliderItems","loadGoodDetail","data","preparedGoodDetail","goodDetailInfo","params","typeParam","images","image","handleImages","description","BannerSlider","bannerImages","currentPosition","setcurrentPosition","imageWidth","setImageWidth","handleSlide","newLeftPosition","buttonWidth","gapWidth","chooseImages","ShopCategory","HomePage","hotPrices","highPrices","Favorites","favoritesProducts","product","Cart","prod","goodForBuy","setGoodForBuy","checkoutHeight","totalPrice","reduce","accum","currentValue","priceWithoutDiscount","height","Boolean","Checkout","Breadcrumbs","sitemap","setSitemap","getSitemap","generatedSitemap","children","levelOne","levelTwo","BackToTop","scrollTo","App","setItem","stringify","preparedData","Root","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8cda5fdb.chunk.js","sourcesContent":["import { Action } from 'redux';\n\nconst START_LOADING = 'START_LOADING';\nconst FINISH_LOADING = 'FINISH_LOADING';\n\ntype Loading = Action<typeof START_LOADING | typeof FINISH_LOADING>;\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const finishLoading = () => ({ type: FINISH_LOADING });\n\nconst reducer = (loading = false, action: Loading) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n\n    case FINISH_LOADING:\n      return false;\n\n    default:\n      return loading;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst LOADED = 'LOADED';\n\ntype Loaded = Action<typeof LOADED>;\n\nexport const setLoaded = () => ({ type: LOADED });\n\nconst reducer = (loaded = false, action: Loaded) => {\n  switch (action.type) {\n    case LOADED:\n      return true;\n\n    default:\n      return loaded;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE';\n\ntype SetErrorMessage = Action<typeof SET_ERROR_MESSAGE> & { errorMessage: string };\n\nexport const setErrorMessage = (errorMessage: string) => ({\n  type: SET_ERROR_MESSAGE,\n  errorMessage,\n});\n\nconst reducer = (errorMessage = '', action: SetErrorMessage) => {\n  switch (action.type) {\n    case SET_ERROR_MESSAGE:\n      return action.errorMessage;\n\n    default:\n      return errorMessage;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst SET_GOODS = 'SET_GOODS';\n\ntype SetPost = Action<typeof SET_GOODS> & { goods: Good[] };\n\nexport const setGoods = (goods: Good[]): SetPost => ({\n  type: SET_GOODS,\n  goods,\n});\n\nconst reducer = (goods = [], action: SetPost) => {\n  switch (action.type) {\n    case SET_GOODS:\n      return action.goods;\n\n    default:\n      return goods;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst SET_FAVORITE = 'SET_FAVORITE';\nconst REMOVE_FAVORITE = 'REMOVE_FAVORITE';\n\ntype SetFavorite = Action<typeof SET_FAVORITE> & { favorite: string };\ntype RemoveFavorite = Action<typeof REMOVE_FAVORITE> & { id: string };\ntype PossibleAction = SetFavorite | RemoveFavorite;\n\nexport const addFavorite = (favorite: string): SetFavorite => ({\n  type: SET_FAVORITE,\n  favorite,\n});\n\nexport const removeFavorite = (id: string): RemoveFavorite => ({\n  type: REMOVE_FAVORITE,\n  id,\n});\n\nlet initFavorites: string[] = [];\n\nif (localStorage.getItem('favoriteProducts')) {\n  initFavorites = [...JSON.parse(localStorage.getItem('favoriteProducts') || '')];\n}\n\nconst reducer = (favorites = initFavorites, action: PossibleAction) => {\n  switch (action.type) {\n    case SET_FAVORITE:\n      return [...favorites, action.favorite];\n\n    case REMOVE_FAVORITE:\n      return favorites.filter(id => id !== action.id);\n\n    default:\n      return favorites;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst SET_CART_GOODS = 'SET_CART_GOODS';\nconst CHANGE_COUNT = 'CHANGE_COUNT';\nconst CLEAR_CART = 'CLEAR_CART';\nconst SET_FROM_LOCALSTORAGE = 'SET_FROM_LOCALSTORAGE';\nconst DELETE_GOODS_FROM_CART = 'DELETE_GOODS_FROM_CART';\n\ntype addCartGoods = Action<typeof SET_CART_GOODS> & { id: string };\ntype deleteCartGoods = Action<typeof DELETE_GOODS_FROM_CART> & { id: string };\ntype changeCount = Action<typeof CHANGE_COUNT> & {\n  id: string;\n  path: number;\n};\ntype clearCart = Action<typeof CLEAR_CART>;\ntype setFromLocalStorage = Action<typeof SET_FROM_LOCALSTORAGE> & {\n  info: CartGood[];\n};\n\nexport const addCartGoods = (id: string): addCartGoods => ({\n  type: SET_CART_GOODS,\n  id,\n});\n\nexport const deleteCartGoods = (id: string): deleteCartGoods => ({\n  type: DELETE_GOODS_FROM_CART,\n  id,\n})\n\nexport const changeCount = (id: string, path: number): changeCount => ({\n  type: CHANGE_COUNT,\n  id,\n  path,\n});\n\nexport const setFromLS = (info: CartGood[]) => ({\n  type: SET_FROM_LOCALSTORAGE,\n  info,\n});\n\nexport const clearCart = (): clearCart => ({ type: CLEAR_CART });\n\ntype PossibleAction = addCartGoods\n  | changeCount\n  | clearCart\n  | setFromLocalStorage\n  | deleteCartGoods;\n\nlet initCart: CartGood[] = [];\n\nif (localStorage.getItem('cartItem')) {\n  initCart = [...JSON.parse(localStorage.getItem('cartItem') || '')];\n}\n\nconst reducer = (cart = initCart, action: PossibleAction) => {\n  switch (action.type) {\n    case SET_CART_GOODS:\n      return [\n        ...cart,\n        {\n          id: action.id,\n          count: 1,\n        },\n      ];\n\n    case DELETE_GOODS_FROM_CART:\n      return cart.filter(good => good.id !== action.id)\n\n    case CHANGE_COUNT:\n      return cart.map(good => ({\n        ...good,\n        count: action.id === good.id\n          ? good.count + action.path\n          : good.count,\n      }));\n\n    case CLEAR_CART:\n      return [];\n\n    case SET_FROM_LOCALSTORAGE:\n      return action.info;\n\n    default:\n      return cart;\n  }\n};\n\nexport default reducer;\n","const API_URL = 'https://mate-academy.github.io/react_phone-catalog/api';\n\nexport async function getData<T>(url: string): Promise<T[]> {\n  const response = await fetch(url);\n  const json = await response.json();\n\n  return json;\n}\n\nexport async function fetchGoods() {\n  const phones = await getData<Good>(`${API_URL}/products.json`);\n\n  return phones;\n}\n\nexport async function fetchGoodDetail(id: string) {\n  const response = await fetch(`${API_URL}/products/${id}.json`);\n  const goodDetail = await response.json();\n\n  return goodDetail;\n}\n","import { createStore, compose, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Dispatch } from 'react';\n\nimport loadingReducer, { finishLoading, startLoading } from './loading';\nimport loadedReducer, { setLoaded } from './loaded';\nimport errordReducer, { setErrorMessage } from './error';\nimport goodsReducer, { setGoods } from './goods';\nimport favoritesReducer, { addFavorite, removeFavorite } from './favorites';\nimport cartReducer from './cart';\nimport { fetchGoods } from '../helpers/api';\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  loading: loadingReducer,\n  loaded: loadedReducer,\n  errorMessage: errordReducer,\n  goods: goodsReducer,\n  favorites: favoritesReducer,\n  cart: cartReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const isLoading = (state: RootState) => state.loading;\nexport const isLoaded = (state: RootState) => state.loaded;\nexport const getError = (state: RootState) => state.errorMessage;\nexport const getGoods = (state: RootState) => state.goods;\nexport const getFavorites = (state: RootState) => state.favorites;\nexport const getCartGoods = (state: RootState) => state.cart;\nexport { addFavorite, removeFavorite };\n\nexport const loadGoods = () => {\n  return async (dispatch: Dispatch<any>) => {\n    dispatch(startLoading());\n\n    try {\n      const data = await fetchGoods();\n      const preparedData = data.filter(product => product.type);\n\n      dispatch(setGoods(preparedData));\n      dispatch(setLoaded());\n    } catch (error) {\n      dispatch(setErrorMessage(`Error occurred when loading data: ${error}`));\n    }\n\n    dispatch(finishLoading());\n  };\n};\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Nav.scss';\n\ninterface Props {\n  links: Link[];\n  className?: string;\n}\n\nexport const Nav: React.FC<Props> = ({ links, className }) => (\n  <nav className={`Nav ${className || ''}`}>\n    <ul className=\"Nav__List\">\n      {links.map(({ name, url, exact, external }) => (\n        <li className=\"Nav__Item\" key={name}>\n          {external && (\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"Nav__Link\">\n              {name}\n            </a>\n          )}\n          {!external && (\n            <NavLink\n              to={`/${url}`}\n              exact={exact}\n              className=\"Nav__Link\"\n              activeClassName=\"Nav__Link--active\"\n            >\n              {name}\n            </NavLink>\n          )}\n        </li>\n      ))}\n    </ul>\n  </nav>\n);\n","export const Banners: Banners[] = [\n  { alt: 'First banner', path: 'images/banner.jpg' },\n  { alt: 'Second banner', path: 'images/banner2.jpg' },\n  { alt: 'Third banner', path: 'images/banner3.jpg' },\n];\n\nexport const PER_PAGE_SETTINGS = [\n  {\n    name: '4',\n  },\n  {\n    name: '8',\n  },\n  {\n    name: '12',\n  },\n  {\n    name: '16',\n  },\n];\n\nexport const SLIDER_FILTER_TYPE = {\n  hotPrice: 'hotPrice',\n  alsoLike: 'alsoLike',\n  newModels: 'newModels',\n};\n\nexport const ITEM_TECH_INFO: ItemTechType[] = [\n  {\n    name: 'Screen',\n    order: 'info',\n  },\n  {\n    name: 'Resolution',\n    order: 'detail',\n  },\n  {\n    name: 'Processor',\n    order: 'detail',\n  },\n  {\n    name: 'RAM',\n    order: 'info',\n  },\n];\n\nexport const ITEM_TECH_SPECS: ItemTechType[] = [\n  {\n    name: 'Screen',\n    order: 'info',\n  },\n  {\n    name: 'Resolution',\n    order: 'detail',\n  },\n  {\n    name: 'Processor',\n    order: 'detail',\n  },\n  {\n    name: 'RAM',\n    order: 'info',\n  },\n  {\n    name: 'Built in memory',\n    order: 'info',\n  },\n  {\n    name: 'Camera',\n    order: 'detail',\n  },\n  {\n    name: 'Zoom',\n    order: 'detail',\n  },\n  {\n    name: 'Cell',\n    order: 'detail',\n  },\n];\n\n","export const SORT_TYPES: SortType[] = [\n  {\n    name: 'Price: Low to High',\n    field: 'price',\n    typeField: 'number',\n    type: 'cheap',\n    isReverse: false,\n  },\n  {\n    name: 'Price: High to Low',\n    field: 'price',\n    typeField: 'number',\n    type: 'expensive',\n    isReverse: true,\n    isDefault: true,\n  },\n  {\n    name: 'Goods: A to Z',\n    field: 'name',\n    typeField: 'string',\n    type: 'alphabet',\n    isReverse: false,\n  },\n  {\n    name: 'Goods: Z to A',\n    field: 'name',\n    typeField: 'string',\n    type: 'betalpha',\n    isReverse: true,\n  },\n  {\n    name: 'Newest',\n    field: 'age',\n    typeField: 'number',\n    type: 'newest',\n    isReverse: false,\n  },\n  {\n    name: 'Oldest',\n    field: 'age',\n    typeField: 'number',\n    type: 'oldest',\n    isReverse: true,\n  },\n];\n\nexport const sortBy = (goods: Good[], sortType: SortType) => {\n  if (sortType.typeField === 'number') {\n    const sortedGoods = [...goods].sort((a, b) => {\n      const direction = sortType.isReverse ? -1 : 1;\n\n      return (Number(a[sortType.field]) - Number(b[sortType.field])) * direction;\n    });\n\n    return sortedGoods;\n  }\n\n  if (sortType.typeField === 'string') {\n    return [...goods].sort((a, b) => {\n      const direction = sortType.isReverse ? -1 : 1;\n\n      return (String(a[sortType.field]).localeCompare(String(b[sortType.field]))) * direction;\n    });\n  }\n\n  return goods;\n};\n","import { SLIDER_FILTER_TYPE } from './config';\n\nexport const sliderFilter = (cards: Good[], filterType: string, id: string) => {\n  switch (filterType) {\n    case SLIDER_FILTER_TYPE.hotPrice:\n      return [...cards]\n        .filter(card => card.price && card.discount)\n        .sort((a: Good, b: Good): number => {\n          const aDiscountPrice = (a.discount / 100) * a.price;\n          const bDiscountPrice = (b.discount / 100) * b.price;\n\n          return bDiscountPrice - aDiscountPrice;\n        })\n        .slice(0, 8);\n\n    case SLIDER_FILTER_TYPE.alsoLike:\n      return [...cards]\n        .sort((): number => {\n          return Math.random() - 0.5;\n        })\n        .filter(card => card.id !== id)\n        .slice(0, 8);\n\n    case SLIDER_FILTER_TYPE.newModels:\n      return [...cards]\n        .sort((a: Good, b: Good): number => {\n          const aDiscountPrice = a.age;\n          const bDiscountPrice = b.age;\n\n          return aDiscountPrice - bDiscountPrice;\n        })\n        .slice(0, 8);\n\n    default:\n      return cards;\n  }\n};\n","export const techInfo = (goodInfo: Good, goodDetail: GoodDetail, param: string, order: string) => {\n  let value = '';\n\n  if (order === 'info') {\n    switch (param) {\n      case 'Screen':\n        value = goodInfo.screen;\n        break;\n\n      case 'RAM':\n        value = goodInfo.ram;\n        break;\n\n      case 'Built in memory':\n        value = goodInfo.capacity;\n    }\n  }\n\n  if (order === 'detail') {\n    switch (param) {\n      case 'Resolution':\n        value = goodDetail.display.screenResolution;\n        break;\n\n      case 'Processor':\n        value = goodDetail.hardware.cpu;\n        break;\n\n      case 'Camera':\n        value = goodDetail.camera.primary;\n        break;\n\n      case 'Zoom':\n        value = goodDetail.camera.zoom;\n        break;\n\n      case 'Cell':\n        value = goodDetail.connectivity.cell;\n        break;\n    }\n  }\n\n  return value ? value : 'No info'\n}\n","export const SECTION_LINKS: Link[] = [\n  {\n    name: 'Phones',\n    title: 'Mobile Phones',\n    url: 'phone',\n    type: 'phone',\n    imgUrl: 'images/category/phones.png',\n  },\n  {\n    name: 'Tablets',\n    title: 'Tablets',\n    url: 'tablet',\n    type: 'tablet',\n    imgUrl: 'images/category/tablets.png',\n  },\n  {\n    name: 'Accessories',\n    title: 'Phone and Tablet Accessories',\n    url: 'accessories',\n    type: 'accessories',\n    imgUrl: 'images/category/accessoires.png',\n  },\n];\n\nexport const STATIC_PAGES: Link[] = [\n  {\n    name: 'Phone Store',\n    title: 'Phone Store',\n    url: '/',\n  },\n  {\n    name: 'GitHub',\n    url: 'http://localhost:3000/#/phones/https://github.com/fe-feb20-team3',\n    external: true,\n  },\n];\n\nexport const SERVICE_PAGES: Link[] = [\n  {\n    name: 'Cart',\n    title: 'Cart',\n    url: 'cart',\n  },\n  {\n    name: 'Favorites',\n    title: 'Favorite Products',\n    url: 'favorites',\n  },\n];\n\nexport const FOOTER_LINKS: Link[] = [\n  {\n    name: 'Github',\n    url: 'https://github.com/fe-feb20-team3',\n    external: true,\n  },\n  {\n    name: 'Contacts',\n    url: 'contacts',\n  },\n  {\n    name: 'Rights',\n    url: 'rights',\n  },\n];\n","import React, {\n  useState, useEffect, useRef, useCallback,\n} from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './Search.scss';\nimport { debounce, SECTION_LINKS } from '../../helpers';\n\nexport const Search = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { section } = useParams();\n  const isSection = SECTION_LINKS.some(item => item.url === section);\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query') || '';\n  const [visibleQuery, setVisibleQuery] = useState(query);\n\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (query === '' && searchInput.current) {\n      searchInput.current.focus();\n    }\n  }, [query]);\n\n  const updateQuery = useCallback(debounce(\n    (actualQuery: string): void => {\n      if (actualQuery === '') {\n        searchParams.delete('query');\n      } else {\n        searchParams.set('query', actualQuery);\n      }\n\n      searchParams.set('page', '1');\n      history.push({ search: searchParams.toString() });\n    },\n    1000,\n  ), []);\n\n  const handleQueryUpdate = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    updateQuery(value);\n    setVisibleQuery(value);\n  };\n\n  const clearInput = () => {\n    searchParams.delete('query');\n    history.push({ search: searchParams.toString() });\n    updateQuery('');\n    setVisibleQuery('');\n  };\n\n  return (\n    <div className=\"Search\">\n      {isSection && (\n        <form action=\"./\" className=\"Search__Form\" onSubmit={e => e.preventDefault()}>\n          <label htmlFor=\"search-field\" className=\"Search__Label\">\n            <input\n              id=\"search-field\"\n              type=\"text\"\n              className=\"Search__Input\"\n              value={visibleQuery}\n              placeholder=\"Search in phones...\"\n              ref={searchInput}\n              onChange={handleQueryUpdate}\n            />\n            <button\n              type=\"button\"\n              className={cn({\n                Search__Button: true,\n                'Search__Button--clear': visibleQuery.length > 0,\n              })}\n              onClick={clearInput}\n            />\n          </label>\n        </form>\n      )}\n    </div>\n  );\n};\n","export const debounce = (f: (value: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: any) => {\n    clearTimeout(timerId);\n    timerId = window.setTimeout(f, delay, ...args);\n  };\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport './Icon.scss';\n\ninterface Props {\n  name: string;\n  tag?: number;\n  size?: number;\n  border: boolean;\n  inActive: boolean;\n}\n\nexport const Icon: React.FC<Props> = ({\n  name,\n  tag,\n  size = 0,\n  border,\n  inActive,\n}) => (\n  <div\n    className={cn(`Icon Icon--size${size}`, {\n      Icon__Border: border,\n    })}\n  >\n    <div className={\n      cn(\n        'Icon__Image',\n        `Icon__Image--${name}`,\n        `Icon__Image--size${size}`,\n        {\n          'Icon__Image--inactive': inActive,\n        },\n      )\n    }\n    />\n    {Number(tag) > 0 && (\n      <div className={`Icon__Tag Icon__Tag--size${size}`}>\n        {tag}\n      </div>\n    )}\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport cn from 'classnames';\n\nimport './NavSliding.scss';\nimport { getFavorites, getCartGoods } from '../../store';\nimport { Icon } from '../Icon';\nimport { SECTION_LINKS, FOOTER_LINKS } from '../../helpers';\n\nexport const NavSliding = () => {\n  const location = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n  const favorites: string[] = useSelector(getFavorites);\n  const cart = useSelector(getCartGoods);\n\n  const handleNavSliding = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    setIsOpen(false);\n  }, [location]);\n\n  return (\n    <nav className=\"NavSliding\">\n      <button\n        type=\"button\"\n        className={cn('NavSliding__Button', { 'NavSliding__Button--cross': isOpen })}\n        onClick={handleNavSliding}\n      >\n        <span className=\"NavSliding__ButtonLine\" />\n        <span className=\"NavSliding__ButtonLine\" />\n      </button>\n      <section className={cn('NavSliding__Block', { show: isOpen })}>\n        <div className=\"NavSliding__Illustration\" onClick={() => setIsOpen(false)} />\n        <div className=\"NavSliding__Content\">\n          <ul className=\"NavSliding__List--secondary NavSliding__List--icons\">\n            <li className=\"NavSliding__Item--secondary\">\n              <Link to=\"/favorites\" className=\"NavSliding__Icon\">\n                <Icon\n                  name=\"favorites\"\n                  tag={favorites.length}\n                  size={3}\n                  border={false}\n                  inActive={false}\n                />\n              </Link>\n            </li>\n            <li className=\"NavSliding__Item--secondary\">\n              <Link to=\"/cart\" className=\"NavSliding__Icon\">\n                <Icon\n                  name=\"shopping-bag\"\n                  tag={cart.length}\n                  size={3}\n                  border={false}\n                  inActive={false}\n                />\n              </Link>\n            </li>\n          </ul>\n          <ul className=\"NavSliding__List\">\n            <li className=\"NavSliding__Item\">\n              <Link\n                to=\"/\"\n                className=\"NavSliding__Link NavSliding__Link--primary\"\n              >\n                Home\n              </Link>\n            </li>\n            {SECTION_LINKS.map(({ name, url }) => (\n              <li className=\"NavSliding__Item\" key={name}>\n                <Link\n                  to={`/${url}`}\n                  className=\"NavSliding__Link NavSliding__Link--primary\"\n                >\n                  {name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n          <ul className=\"NavSliding__List--secondary\">\n            {FOOTER_LINKS.map(({ name, url }) => (\n              <li className=\"NavSliding__Item--secondary\" key={name}>\n                <Link\n                  to={url}\n                  className=\"NavSliding__Link NavSliding__Link--secondary\"\n                >\n                  {name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </section>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Link, NavLink, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport './Header.scss';\nimport { getFavorites, getCartGoods } from '../../store';\nimport { Nav } from '../Nav';\nimport { Search } from '../Search';\nimport { Icon } from '../Icon';\nimport { SECTION_LINKS } from '../../helpers';\nimport { NavSliding } from '../NavSliding';\n\nexport const Header = () => {\n  const favorites: string[] = useSelector(getFavorites);\n  const cart = useSelector(getCartGoods);\n\n  return (\n    <header className=\"Header\" id=\"top\">\n      <Link to=\"/\" className=\"Header__Logo\">\n        <img src=\"./img/logo.svg\" alt=\"Logo\" />\n      </Link>\n      <div className=\"Header__HomeLink\">\n        <NavLink\n          to=\"/\"\n          exact\n          className=\"Nav__Link\"\n          activeClassName=\"Nav__Link--active\"\n        >\n          Home\n        </NavLink>\n      </div>\n      <Nav links={SECTION_LINKS} className=\"Header__Nav\" />\n      <div className=\"Header__Search\">\n        <Route path=\"/:section\" exact component={Search} />\n      </div>\n      <Link to=\"/favorites\" className=\"Header__Button\">\n        <Icon\n          name=\"favorites\"\n          tag={favorites.length}\n          border={false}\n          inActive={false}\n        />\n      </Link>\n      <Link to=\"/cart\" className=\"Header__Button\">\n        <Icon\n          name=\"shopping-bag\"\n          tag={cart.length}\n          border={false}\n          inActive={false}\n        />\n      </Link>\n      <NavSliding />\n    </header>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Footer.scss';\nimport { Nav } from '../Nav';\nimport { FOOTER_LINKS } from '../../helpers';\n\nexport const Footer = () => (\n  <footer className=\"Footer\">\n    <div className=\"Footer__Content container\">\n      <Link to=\"/\" className=\"Footer__Logo\">\n        <img src=\"./images/logo.svg\" alt=\"Logo\" />\n      </Link>\n      <Nav links={FOOTER_LINKS} className=\"Footer__Nav\" />\n      <div />\n    </div>\n  </footer>\n);\n","import React from 'react';\nimport './Buttons.scss';\nimport cn from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addCartGoods, deleteCartGoods } from '../../store/cart';\nimport { getCartGoods } from '../../store';\n\ninterface Props {\n  id: string;\n}\n\nexport const PrimaryButton: React.FC<Props> = ({ id }) => {\n  const dispatch = useDispatch();\n  const cart = useSelector(getCartGoods);\n  const status = cart.some(good => good.id === id);\n\n  return (\n    <button\n      type=\"button\"\n      className={cn({\n        Button: true,\n        Button__Primary: true,\n        'Button__Primary--selected': status,\n      })}\n      onClick={() => {\n        if (status) {\n          dispatch(deleteCartGoods(id));\n        } else {\n          dispatch(addCartGoods(id));\n        }\n      }}\n    >\n      {status ? 'Remove from cart' : 'Add to cart'}\n    </button>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getFavorites, removeFavorite, addFavorite } from '../../store';\nimport { PrimaryButton } from '../Buttons';\nimport { Icon } from '../Icon';\n\ninterface Props {\n  good: Good;\n}\n\nexport const GoodItem: React.FC<Props> = ({ good }) => {\n  const favorites: Array<string> = useSelector(getFavorites);\n  const dispatch = useDispatch();\n\n  const isFavorite = useMemo(\n    () => (goodId: string) => favorites.some(id => id === goodId),\n    [favorites],\n  );\n\n  const handleFavorites = (selectedGood: Good) => {\n    if (favorites.some(favorite => favorite === selectedGood.id)) {\n      dispatch(removeFavorite(selectedGood.id));\n    } else {\n      dispatch(addFavorite(selectedGood.id));\n    }\n  };\n\n  return (\n    <article key={good.id} className=\"GoodsList__Item GoodItem\">\n      <Link to={`/${good.type}/${good.id}`} className=\"GoodItem__Link\">\n        <img\n          src={good.imageUrl}\n          alt={good.name}\n          className=\"GoodItem__Image\"\n        />\n        <h3 className=\"GoodItem__Heading\">\n          {good.name}\n        </h3>\n      </Link>\n\n      <section className=\"GoodItem__Price\">\n        <span className=\"GoodItem__Price--actual\">\n          {(good.discount > 0)\n            ? good.price - ((good.price / 100) * good.discount)\n            : good.price}\n        </span>\n        {(good.discount > 0) && (\n          <span className=\"GoodItem__Price--full\">\n            {good.price}\n          </span>\n        )}\n      </section>\n\n      <section className=\"GoodItem__PropsList\">\n        <div className=\"GoodItem__PropsItem\">\n          <span className=\"GoodItem__PropsItem--title\">Screen</span>\n          <span className=\"GoodItem__PropsItem--value\">\n            {good.screen ? good.screen : '-'}\n          </span>\n        </div>\n\n        <div className=\"GoodItem__PropsItem\">\n          <span className=\"GoodItem__PropsItem--title\">Capacity</span>\n          <span className=\"GoodItem__PropsItem--value\">\n            {good.capacity ? good.capacity : '-'}\n          </span>\n        </div>\n\n        <div className=\"GoodItem__PropsItem\">\n          <span className=\"GoodItem__PropsItem--title\">RAM</span>\n          <span className=\"GoodItem__PropsItem--value\">\n            {good.ram ? good.ram : '-'}\n          </span>\n        </div>\n      </section>\n\n      <section className=\"GoodItem__Buttons\">\n        <div className=\"GoodItem__Buttons--main\">\n          <PrimaryButton\n            id={good.id}\n          />\n        </div>\n        <label onClick={() => handleFavorites(good)}>\n          <Icon name={isFavorite(good.id) ? 'favorites-filled' : 'favorites'} border inActive={false} />\n        </label>\n      </section>\n    </article>\n  );\n};\n","import React from 'react';\n\nimport './GoodsList.scss';\nimport { GoodItem } from './GoodItem';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <div className=\"GoodsList\">\n    {goods.map(good => (\n      <GoodItem good={good} key={good.id} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport {\n  useLocation,\n  Redirect,\n  useHistory,\n} from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './Pagination.scss';\n\ninterface Props {\n  qty: number;\n  perPage: number;\n}\n\nexport const Pagination: React.FC<Props> = ({ qty, perPage }) => {\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n  const currentPage = Number(searchParams.get('page'));\n\n  if (currentPage <= 0) {\n    return (\n      <Redirect\n        to={{\n          pathname: `${location.pathname}`,\n          search: `?page=1&perPage=${perPage}`,\n        }}\n      />\n    );\n  }\n\n  const currentSort = searchParams.get('sortBy');\n  const pages = Array(Math.ceil(qty / Number(perPage))).fill(0, 0, qty).map((p, i) => p + i + 1);\n\n  const handleClick = (page: number) => {\n    if (currentSort) {\n      searchParams.set('sortBy', currentSort);\n    }\n\n    searchParams.set('page', `${page}`);\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  if (currentPage <= 0) {\n    return (\n      <Redirect\n        to={{\n          pathname: `${location.pathname}`,\n          search: `?page=1&perPage=${perPage}`,\n        }}\n      />\n    );\n  }\n\n  if (currentPage > pages.length) {\n    return (\n      <Redirect\n        to={{\n          pathname: `${location.pathname}`,\n          search: `?page=${pages.length}&perPage=${perPage}`,\n        }}\n      />\n    );\n  }\n\n  const getArrow = (type: string) => {\n    if (type === 'prev' && currentPage > 1) {\n      return (\n        <button\n          type=\"button\"\n          className=\"Pagination__Button Pagination__Button--arrow-left\"\n          onClick={() => handleClick(currentPage - 1)}\n        />\n      );\n    }\n\n    if (type === 'prev') {\n      return (\n        <div className=\"\n          Pagination__Button\n          Pagination__Button--arrow-left\n          Pagination__Button--disabled\"\n        />\n      );\n    }\n\n    if (type === 'next' && currentPage < pages.length) {\n      return (\n        <button\n          type=\"button\"\n          className=\"Pagination__Button Pagination__Button--arrow-right\"\n          onClick={() => handleClick(currentPage + 1)}\n        />\n      );\n    }\n\n    if (type === 'next') {\n      return (\n        <div className=\"\n          Pagination__Button\n          Pagination__Button--arrow-right\n          Pagination__Button--disabled\"\n        />\n      );\n    }\n\n    return '';\n  };\n\n  return (\n    <nav className=\"Pagination\">\n      <ul className=\"Pagination__List\">\n        <li className=\"Pagination__Item\">\n          {getArrow('prev')}\n        </li>\n        {pages.map(page => (\n          <li className=\"Pagination__Item\" key={page}>\n            <button\n              type=\"button\"\n              className={cn({\n                Pagination__Button: true,\n                'Pagination__Button--active': page === currentPage,\n              })}\n              onClick={() => handleClick(page)}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n        <li className=\"Pagination__Item\">\n          {getArrow('next')}\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface Props {\n  options: PerPage[];\n}\n\nexport const SelectPerPage: React.FC<Props> = ({ options }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const currentPerPage = searchParams.get('perPage');\n  const currentOption = options.find(option => option.name === currentPerPage) || options[0];\n  const [isOpen, setIsOpen] = useState(false);\n\n  const chooseSelectValue = (option: PerPage) => {\n    searchParams.set('perPage', option.name);\n    searchParams.set('page', '1');\n    history.push({\n      search: searchParams.toString(),\n    });\n\n    setIsOpen(false);\n  };\n\n  const clickSubscribe = () => {\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      document.documentElement.removeEventListener('click', clickSubscribe);\n    } else {\n      document.documentElement.addEventListener('click', clickSubscribe);\n    }\n  }, [isOpen]);\n\n  return (\n    <div\n      className={cn({\n        Select: true,\n        Select__Closest: !isOpen,\n      })}\n    >\n      <label\n        className={cn({\n          'Select__Active--after': isOpen,\n        })}\n      />\n\n      <button\n        type=\"button\"\n        className={cn({\n          Select__Active: true,\n          'Select__Active--opened': isOpen,\n        })}\n        onClick={() => setIsOpen(true)}\n      >\n        {currentOption.name}\n        <span>\n          <div className={cn({\n            Select__Arrow: true,\n            'Select__Arrow--opened': isOpen,\n          })}\n          />\n        </span>\n      </button>\n      <ul className={cn({\n        Select__List: true,\n        'Select__List--opened': isOpen,\n      })}\n      >\n        {options.map(option => (\n          option.name !== currentOption.name && (\n            <li\n              key={option.name}\n              className=\"Select__Item\"\n              data-value={option.name}\n              onClick={() => chooseSelectValue(option)}\n            >\n              {option.name}\n            </li>\n          )\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './NotAvailable.scss';\n\nexport const NotAvailable = () => (\n  <div className=\"NotAvailable\">\n    <img\n      src=\"images/notAvailable.jpg\"\n      alt=\"Goods not found\"\n      className=\"NotAvailable__Image\"\n    />\n  </div>\n);\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport './Select.scss';\n\ninterface Props {\n  options: SortType[];\n}\n\nexport const Select: React.FC<Props> = ({ options }) => {\n  const defaultSortType = options.find(item => item.isDefault) || options[0];\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const currentSortType = useMemo(\n    () => searchParams.get('sortBy') || defaultSortType,\n    [searchParams, defaultSortType],\n  );\n  const currentPerPage = useMemo(() => searchParams.get('perPage'), [searchParams]);\n\n  const currentOption = options.find(option => option.type === currentSortType) || defaultSortType;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const chooseSelectValue = (option: SortType) => {\n    searchParams.set('sortBy', option.type);\n    searchParams.set('page', '1');\n\n    if (currentPerPage) {\n      searchParams.set('perPage', currentPerPage);\n    }\n\n    history.push({\n      search: searchParams.toString(),\n    });\n\n    setIsOpen(false);\n  };\n\n  const clickSubscribe = () => {\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (!isOpen) {\n      document.documentElement.removeEventListener('click', clickSubscribe);\n    } else {\n      document.documentElement.addEventListener('click', clickSubscribe);\n    }\n  }, [isOpen]);\n\n  return (\n    <div\n      className={cn({\n        Select: true,\n        Select__Closest: !isOpen,\n      })}\n    >\n      <label\n        className={cn({\n          'Select__Active--after': isOpen,\n        })}\n      />\n\n      <button\n        type=\"button\"\n        className={cn({\n          Select__Active: true,\n          'Select__Active--opened': isOpen,\n        })}\n        onClick={() => setIsOpen(true)}\n      >\n        {currentOption.name}\n        <span>\n          <div className={cn({\n            Select__Arrow: true,\n            'Select__Arrow--opened': isOpen,\n          })}\n          />\n        </span>\n      </button>\n      <ul className={cn({\n        Select__List: true,\n        'Select__List--opened': isOpen,\n      })}\n      >\n        {options.map(option => (\n          option.type !== currentOption.type && (\n            <li\n              key={option.name}\n              className=\"Select__Item\"\n              data-value={option.type}\n              onClick={() => chooseSelectValue(option)}\n            >\n              {option.name}\n            </li>\n          )\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './NotFound.scss';\n\nexport const NotFound = () => {\n  return (\n    <div className=\"NotFound\">\n      <img\n        src=\"images/notFound.jpg\"\n        alt=\"Goods not found\"\n        className=\"NotFound__Image\"\n      />\n    </div>\n  );\n};\n\n","import React, { useMemo } from 'react';\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { useSelector } from 'react-redux';\n\nimport { getGoods } from '../../store';\n\nimport './GoodsSection.scss';\nimport { GoodsList } from '../GoodsList';\nimport { Pagination, SelectPerPage } from '../Pagination';\nimport { NotAvailable } from '../NotAvailable';\nimport {\n  sortBy,\n  SECTION_LINKS,\n  SORT_TYPES,\n  PER_PAGE_SETTINGS,\n} from '../../helpers';\nimport { Select } from '../Select';\nimport { NotFound } from '../NotFound';\n\nexport const GoodsSection = () => {\n  const goods: Good[] = useSelector(getGoods);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const query = searchParams.get('query')?.toLowerCase() || '';\n  const currentPage = Number(searchParams.get('page'));\n  const [defaultPerPage] = PER_PAGE_SETTINGS;\n  const perPageParam = useMemo(() => searchParams.get('perPage'), [searchParams]);\n  let perPage = Number(defaultPerPage.name);\n\n  if (PER_PAGE_SETTINGS.find(item => item.name === perPageParam)) {\n    perPage = Number(PER_PAGE_SETTINGS.find(item => item.name === perPageParam)?.name);\n  } else {\n    searchParams.set('perPage', defaultPerPage.name);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }\n\n  const sortParam = searchParams.get('sortBy');\n  const sortType = SORT_TYPES.find((sort: SortType) => sort.type === sortParam) || SORT_TYPES[1];\n\n  if (!sortType) {\n    searchParams.set('sortBy', SORT_TYPES[1].type);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }\n\n  const { section } = useParams();\n  const sectionProp = SECTION_LINKS.find(link => link.url === section);\n\n  const filteredGoods = useMemo(\n    () => goods.filter(good => good.type === sectionProp?.type),\n    [goods, sectionProp],\n  );\n\n  const searchedGoods = useMemo(\n    () => filteredGoods.filter(good => {\n      return `${good.name} ${good.snippet}`.toLowerCase().includes(query);\n    }),\n    [query, filteredGoods],\n  );\n\n  const sortedGoods = useMemo(\n    () => sortBy(searchedGoods, sortType),\n    [searchedGoods, sortType],\n  );\n\n  const paginatedGoods = sortedGoods.slice(\n    (currentPage || 1) * perPage - perPage,\n    (currentPage || 1) * perPage,\n  );\n\n  return (\n    <>\n      {filteredGoods.length === 0 && <NotAvailable />}\n      {filteredGoods.length > 0 && searchedGoods.length === 0 && (\n        <NotFound />\n      )}\n      {sortedGoods.length >= 1 && (\n        <section className=\"section GoodsSection\">\n          <Helmet>\n            <title>{sectionProp?.title || sectionProp?.name}</title>\n          </Helmet>\n          <h1 className=\"GoodsSection__Heading\">\n            {sectionProp?.title || sectionProp?.name}\n          </h1>\n          <div className=\"GoodsSection__Qty\">{`${filteredGoods.length} models`}</div>\n\n          <div className=\"GoodsSection__Control\">\n            {filteredGoods.length > 1 && (\n              <>\n                <div className=\"GoodsSection__Select\">\n                  <div className=\"GoodsSection__SelectName\">\n                    Sort by\n                  </div>\n                  <Select options={SORT_TYPES} />\n                </div>\n\n                <div className=\"GoodSection__Select\">\n                  <div className=\"GoodsSection__SelectName\">\n                    Items on page\n                  </div>\n                  <SelectPerPage options={PER_PAGE_SETTINGS} />\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"GoodsSection__Container\">\n            <GoodsList goods={paginatedGoods} />\n          </div>\n          {searchedGoods.length > perPage && (\n            <div className=\"Pagination\">\n              <Pagination qty={searchedGoods.length} perPage={perPage} />\n            </div>\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { techInfo } from '../../helpers/techInfo';\nimport { ITEM_TECH_INFO } from '../../helpers/config';\ninterface Props {\n  goodInfo: Good | undefined;\n  goodDetail: GoodDetail;\n}\n\nexport const GoodTechInfo: React.FC<Props> = ({ goodInfo, goodDetail }) => (\n  <ul className=\"GoodPage__InfoList\">\n    {ITEM_TECH_INFO.map(item => (\n      <li className=\"GoodPage__InfoItem\" key={item.name}>\n        <p className=\"GoodPage__InfoTitle\">\n          {item.name}\n        </p>\n        <p className=\"GoodPage__InfoFeature\">\n          {goodInfo && techInfo(goodInfo, goodDetail, item.name, item.order)}\n        </p>\n      </li>\n    ))}\n  </ul>\n);\n\n","import React from 'react';\nimport { techInfo } from '../../helpers/techInfo';\nimport { ITEM_TECH_SPECS } from '../../helpers/config';\n\ninterface Props {\n  goodInfo: Good | undefined;\n  goodDetail: GoodDetail;\n};\n\nexport const GoodSpecsInfo: React.FC<Props> = ({ goodInfo, goodDetail }) => (\n  <ul className=\"GoodPage__SpecsList\">\n    {ITEM_TECH_SPECS.map(item => (\n      <li className=\"GoodPage__SpecsItem\" key={item.name}>\n        <p className=\"GoodPage__SpecsTitle\">\n          {item.name}\n        </p>\n        <p className=\"GoodPage__SpecsFeature\">\n          {goodInfo && techInfo(goodInfo, goodDetail, item.name, item.order)}\n        </p>\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState, useRef, useEffect } from 'react';\nimport cn from 'classnames';\nimport { GoodItem } from '../GoodsList';\nimport './CardSlider.scss';\n\ninterface Props {\n  goods: Good[];\n  title: string;\n}\n\nexport const CardSlider: React.FC<Props> = ({ goods, title }) => {\n  const [left, setLeft] = useState(0);\n  const myWidth = useRef<HTMLDivElement>(null);\n  const cardGap = 16;\n  const minCardWidth = 272;\n  const [cardsOnOneMoment, setCardsOnOneMoment] = useState(4);\n  const [cardWidth, setCardWidth] = useState(minCardWidth);\n  const cardsLength = goods.length;\n  const [position, setPosition] = useState(cardsOnOneMoment);\n\n  const handleSlider = (path: number) => {\n    const newLeftPosition = (cardWidth + cardGap) * -path;\n\n    setLeft(left + newLeftPosition);\n    setPosition(position + path);\n  };\n\n  useEffect(() => {\n    const containerWidth = myWidth.current?.offsetWidth || 0;\n    const visibleCardsQTY = Math.floor(containerWidth / cardWidth);\n    const gapsWidth = (visibleCardsQTY - 1) * cardGap;\n    const visibleCardWidth = (containerWidth - gapsWidth) / visibleCardsQTY;\n\n    setCardsOnOneMoment(visibleCardsQTY);\n    setPosition(visibleCardsQTY);\n    setLeft(0);\n    setCardWidth(visibleCardWidth);\n  }, [myWidth, cardWidth]);\n\n  return (\n    <>\n      <div\n        className=\"Card__Container\"\n        ref={myWidth}\n      >\n        <div className=\"Card__Title-site\">\n          <div>\n            <h2 className=\"Card__Title\">{title}</h2>\n          </div>\n          <div className=\"Card__Buttons\">\n            <button\n              className=\"Card__Button\"\n              type=\"button\"\n              onClick={() => handleSlider(-1)}\n              disabled={position === cardsOnOneMoment}\n            >\n              <div\n                className={cn({\n                  'Card__Button--arrow-left': true,\n                  'Card__Button--arrow': true,\n                  'Card__Button--arrow--disabled': position === cardsOnOneMoment,\n                })}\n              />\n            </button>\n            <button\n              className=\"Card__Button\"\n              type=\"button\"\n              onClick={() => handleSlider(1)}\n              disabled={position === cardsLength}\n            >\n              <div\n                className={cn({\n                  'Card__Button--arrow-right': true,\n                  'Card__Button--arrow': true,\n                  'Card__Button--arrow--disabled': position === cardsLength,\n                })}\n              />\n            </button>\n          </div>\n        </div>\n        <ul\n          className=\"Card\"\n          style={{\n            transform: `translateX(${left}px)`,\n          }}\n        >\n          {goods.map(card => (\n            <li\n              key={card.id}\n              className=\"Card__Item\"\n              style={{\n                width: `${cardWidth}px`,\n              }}\n            >\n              <GoodItem good={card} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './LoadSpinner.scss';\n\nexport const LoadSpinner = () => (\n  <div className=\"lds-roller\">\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, useRouteMatch, Redirect } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport cn from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './GoodPage.scss';\nimport {\n  getGoods,\n  getFavorites,\n  addFavorite,\n  removeFavorite,\n} from '../../store';\nimport { fetchGoodDetail, SECTION_LINKS, sliderFilter } from '../../helpers';\nimport { PrimaryButton } from '../Buttons';\nimport { Icon } from '../Icon';\nimport { GoodTechInfo } from './GoodTechInfo';\nimport { GoodSpecsInfo } from './GoodSpecsInfo';\nimport { CardSlider } from '../CardSlider';\nimport { LoadSpinner } from '../LoadSpinner';\n\nexport const GoodPage = () => {\n  const goods: Good[] = useSelector(getGoods);\n  const { good } = useParams();\n  const match: Match = useRouteMatch();\n  const [goodDetail, setGoodDetail] = useState<GoodDetail>();\n  const [goodInfo, setGoodInfo] = useState<Good>();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [activeImageIndex, setActiveImageIndex] = useState(0);\n\n  const favorites: Array<string> = useSelector(getFavorites);\n  const dispatch = useDispatch();\n  const isFavorite = useMemo(\n    () => (goodId: string) =>  favorites.some(id => id === goodId),\n    [favorites],\n  );\n  const currentType = goods.find(phone => goodDetail && phone.id === goodDetail.id);\n  const sliderItems = sliderFilter(goods, 'hotPrice', '');\n\n  const loadGoodDetail = async (goodId: string) => {\n    setIsLoading(true);\n    setErrorMessage('');\n\n    try {\n      const data = await fetchGoodDetail(goodId);\n      const preparedGoodDetail = { ...data };\n\n      setGoodDetail(preparedGoodDetail);\n      setIsLoaded(true);\n    } catch (error) {\n      setErrorMessage(String(error));\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    if (goods.length) {\n      const goodDetailInfo = goods.find(item => item.id === match.params.good);\n\n      setGoodInfo(goodDetailInfo);\n    }\n  }, [goods, match.params.good]);\n\n  useEffect(() => {\n    loadGoodDetail(good);\n  }, [good]);\n\n  const handleImages = (e: React.MouseEvent<HTMLElement>, i: number) => {\n    e.preventDefault();\n    setActiveImageIndex(i);\n  };\n\n  const handleFavorites = (goodId: string) => {\n    if (favorites.some(favorite => favorite === goodId)) {\n      dispatch(removeFavorite(goodId));\n    } else {\n      dispatch(addFavorite(goodId));\n    }\n  };\n\n  const price = useMemo(\n    () => (goodInfo && goodInfo.discount > 0\n      ? goodInfo.price - ((goodInfo.price / 100) * goodInfo.discount)\n      : goodInfo && goodInfo.price),\n    [goodInfo],\n  );\n\n  if (match.params.section === 'undefined' && goods && currentType) {\n    const typeParam = SECTION_LINKS.find(section => section.type === currentType.type);\n\n    if (typeParam) {\n      return <Redirect to={`/${typeParam.url}/${match.params.good}`} />;\n    }\n  }\n\n  return (\n    <>\n      <section className=\"section\">\n\n        {errorMessage && <div>{errorMessage}</div>}\n        {isLoading\n          && (\n            <div className=\"GoodPage__Loading\">\n              <LoadSpinner />\n            </div>\n          )}\n        {isLoading && isLoaded && ''}\n        {goodDetail && (\n          <article className=\"GoodPage\">\n            <Helmet>\n              <title>{goodDetail.name}</title>\n            </Helmet>\n            <h1 className=\"GoodPage__Heading\">{goodDetail.name}</h1>\n            <div className=\"GoodPage__Content\">\n              <div className=\"GoodPage__Column\">\n                <section className=\"GoodPage__Images\">\n                  <ul className=\"GoodPage__ImageList\">\n                    {goodDetail.images.map((image, i) => (\n                      <li\n                        className={cn({\n                          'GoodPage__Image--current': i === activeImageIndex,\n                        },\n                          'GoodPage__ImageItem')}\n                        key={image}\n                      >\n                        <a href=\"./#\" onClick={e => handleImages(e, i)}>\n                          <img\n                            src={image}\n                            alt={goodDetail.name}\n                            className=\"GoodPage__Image\"\n                          />\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                  <img\n                    src={goodDetail.images[activeImageIndex]}\n                    alt={goodDetail.name}\n                    className=\"GoodPage__ImageBig\"\n                  />\n                </section>\n              </div>\n              <div className=\"GoodPage__Column\">\n                <span className=\"GoodPage__Id\">\n                  ID:\n                  {' '}\n                  {goodInfo && goodInfo.id}\n                </span>\n                <section className=\"GoodPage__NarrowBlock\">\n                  <div className=\"GoodPage__Price\">\n                    <span className=\"GoodPage__Price--actual\">\n                      {price}\n                    </span>\n                    {(goodInfo && goodInfo.discount > 0) && (\n                      <span className=\"GoodPage__Price--full\">\n                        {goodInfo.price}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"GoodPage__Buttons\">\n                    <div className=\"GoodPage__Buttons--main\">\n                      <PrimaryButton\n                        id={match.params.good}\n                      />\n                    </div>\n                    <div className=\"GoodPage__Buttons--favorites\">\n                      <label onClick={() => handleFavorites(good)}>\n                        <Icon name={isFavorite(good) ? 'favorites-filled' : 'favorites'} border inActive={false} />\n                      </label>\n                    </div>\n                  </div>\n                </section>\n                <section className=\"GoodPage__Info\">\n                  <GoodTechInfo\n                    goodDetail={goodDetail}\n                    goodInfo={goodInfo}\n                  />\n                </section>\n              </div>\n\n              <div className=\"GoodPage__Column\">\n                <section className=\"GoodPage__Description\">\n                  <h2 className=\"GoodPage__SubHeading\">About</h2>\n                  {goodInfo && goodInfo.snippet}\n                  <div className=\"GoodPage__MoreInfo\">\n                    <h3 className=\"GoodPage__MoreInfo--SubHeading\">More info</h3>\n                    {goodDetail && goodDetail.description}\n                  </div>\n                </section>\n              </div>\n\n              <div className=\"GoodPage__Column\">\n                <section className=\"GoodPage__TechSpecs\">\n                  <h2 className=\"GoodPage__SubHeading\">Tech specs</h2>\n                  <ul>\n                    <GoodSpecsInfo\n                      goodDetail={goodDetail}\n                      goodInfo={goodInfo}\n                    />\n                  </ul>\n                </section>\n              </div>\n            </div>\n          </article>\n        )}\n      </section>\n      <CardSlider goods={sliderItems} title=\"You may also like\" />\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport './Banner.scss';\nimport cn from 'classnames';\n\nimport { Banners } from '../../helpers';\n\nexport const BannerSlider: React.FC = () => {\n  const bannerImages = Banners.map((image, i) => ({\n    ...image,\n    position: i + 1,\n  }));\n\n  const [currentPosition, setcurrentPosition] = useState(1);\n  const [left, setLeft] = useState(0);\n  const [imageWidth, setImageWidth] = useState(1040);\n  const imageGap = 16;\n  const myWidth = useRef<HTMLDivElement>(null);\n\n  const handleSlide = (path: number) => {\n    const newLeftPosition = (imageWidth + imageGap) * -path;\n\n    if (currentPosition === bannerImages.length && path === 1) {\n      setcurrentPosition(1);\n      setLeft(0);\n\n      return;\n    }\n\n    if (currentPosition === 1 && path === -1) {\n      setcurrentPosition(bannerImages.length);\n      setLeft(((imageWidth + imageGap) * path) * (bannerImages.length - 1));\n\n      return;\n    }\n\n    setcurrentPosition(currentPosition + path);\n    setLeft(left + newLeftPosition);\n  };\n\n  const chooseImages = (position: number) => {\n    if (position === 1) {\n      setLeft(0);\n      setcurrentPosition(1);\n\n      return;\n    }\n\n    const newLoeftPosition = (((position - 1) * imageWidth) + ((position - 1) * imageGap)) * -1;\n\n    setLeft(newLoeftPosition);\n    setcurrentPosition(position);\n  };\n\n  useEffect(() => {\n    const width = (myWidth.current?.offsetWidth || 0);\n    const buttonWidth = 32;\n    const gapWidth = 16;\n\n    setImageWidth(width - (buttonWidth * 2) - (gapWidth * 2));\n  }, [myWidth]);\n\n  return (\n    <div\n      className=\"Banner\"\n      ref={myWidth}\n    >\n      <div\n        className=\"Banner__Slider\"\n      >\n        <button\n          type=\"button\"\n          className=\"Banner__Button\"\n          onClick={() => handleSlide(-1)}\n        >\n          <div className=\"Banner__Image Banner__Image--arrow-left\" />\n        </button>\n\n        <div className=\"Banner__Container\">\n          <ul\n            className=\"Banner__Content\"\n            style={{\n              transform: `translateX(${left}px)`,\n            }}\n          >\n            {bannerImages.map(image => (\n              <li\n                className=\"Banner__Content-image\"\n                key={image.position}\n              >\n                <img\n                  src={image.path}\n                  alt={image.alt}\n                  style={{\n                    width: `${imageWidth}px`,\n                  }}\n                  className=\"Banner__Image--current\"\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"Banner__Button\"\n          onClick={() => handleSlide(1)}\n        >\n          <div className=\"Banner__Image Banner__Image--arrow-right\" />\n        </button>\n      </div>\n      <div className=\"Banner__Position-container\">\n        {bannerImages.map(image => (\n          <span\n            key={image.position}\n            className={cn({\n              'Banner__Position--active': image.position === currentPosition,\n            },\n            'Banner__Position')}\n            onClick={() => chooseImages(image.position)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './ShopCategory.scss';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { getGoods } from '../../store';\nimport { SECTION_LINKS } from '../../helpers';\n\nexport const ShopCategory = () => {\n  const goods: Good[] = useSelector(getGoods);\n\n  return (\n    <div className=\"Category\">\n      <h2 className=\"Category__Title\">\n        Shop by category\n      </h2>\n      <div className=\"Category__Container\">\n        <ul className=\"Category__List\">\n          {SECTION_LINKS.map(link => (\n            <li\n              className=\"Category__Item\"\n              key={link.name}\n            >\n              <Link to={link.url} className=\"Category__Link\">\n                <div\n                  className=\"Category__ImageContainer\"\n                >\n                  <img\n                    src={link.imgUrl}\n                    alt={link.title}\n                    className=\"Category__Image\"\n                  />\n                </div>\n                <div className=\"Category__Info\">\n                  <h3 className=\"Category__InfoType Category__Paragraph\">\n                    {link.title}\n                  </h3>\n                  <p className=\"Category__InfoCount Category__Paragraph\">\n                    {goods.filter(card => card.type === link.type).length}\n                    {' models'}\n                  </p>\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useSelector } from 'react-redux';\n\nimport { getGoods } from '../../store';\nimport { BannerSlider } from '../Banner';\nimport { CardSlider } from '../CardSlider';\nimport { sliderFilter, SLIDER_FILTER_TYPE } from '../../helpers';\nimport { ShopCategory } from '../ShopCategory';\n\nexport const HomePage = () => {\n  const goods: Good[] = useSelector(getGoods);\n  const hotPrices = sliderFilter(goods, SLIDER_FILTER_TYPE.hotPrice, '');\n  const highPrices = sliderFilter(goods, SLIDER_FILTER_TYPE.newModels, '');\n\n  return (\n    <>\n      <Helmet>\n        <title>Phone Store</title>\n      </Helmet>\n      <BannerSlider />\n      <CardSlider goods={hotPrices} title=\"Hot prices\" />\n      <ShopCategory />\n      <CardSlider goods={highPrices} title=\"Brand new models\" />\n    </>\n  );\n};\n","import React, { useMemo, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { useSelector } from 'react-redux';\n\nimport { getGoods, getFavorites } from '../../store';\nimport { GoodsList } from '../GoodsList';\nimport { Pagination, SelectPerPage } from '../Pagination';\nimport { PER_PAGE_SETTINGS } from '../../helpers';\nimport { NotFound } from '../NotFound';\n\nexport const Favorites = () => {\n  const goods: Good[] = useSelector(getGoods);\n  const favorites: Array<string> = useSelector(getFavorites);\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const favoritesProducts = useMemo(\n    () => [...goods].filter(product => favorites.some(id => id === product.id)),\n    [favorites, goods],\n  );\n\n  const [defaultPerPage] = PER_PAGE_SETTINGS;\n  const currentPage = Number(searchParams.get('page'));\n  const perPage = useMemo(() => Number(searchParams.get('perPage')), [searchParams]);\n\n  useEffect(() => {\n    if (PER_PAGE_SETTINGS.some(item => item.name === String(perPage))) {\n      return;\n    }\n\n    searchParams.set('perPage', defaultPerPage.name);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }, [perPage, defaultPerPage.name, history, searchParams]);\n\n\n  const paginatedGoods = favoritesProducts.slice(\n    (currentPage || 1) * perPage - perPage,\n    (currentPage || 1) * perPage,\n  );\n\n  return (\n    <section className=\"section GoodsSection\">\n      <Helmet>\n        <title>Favorite Goods</title>\n      </Helmet>\n      <h1 className=\"GoodsSection__Heading\">\n        Favorite Goods\n      </h1>\n      <div className=\"GoodsSection__Qty\">{`${favorites.length} items`}</div>\n      <div className=\"GoodsSection__Control\">\n        {favoritesProducts.length > 1 && (\n          <div className=\"GoodSection__Select\">\n            <div className=\"GoodsSection__SelectName\">\n              Items on page\n            </div>\n            <SelectPerPage options={PER_PAGE_SETTINGS} />\n          </div>\n        )}\n      </div>\n      <GoodsList goods={paginatedGoods} />\n      {paginatedGoods.length === 0 && <NotFound />}\n      {favoritesProducts.length > perPage && (\n        <div className=\"Pagination\">\n          <Pagination qty={favoritesProducts.length} perPage={perPage} />\n        </div>\n      )}\n    </section>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport './Cart.scss';\nimport { getGoods, getCartGoods } from '../../store';\nimport { changeCount, clearCart, deleteCartGoods } from '../../store/cart';\n\n\nexport const Cart = () => {\n  const goods: Good[] = useSelector(getGoods);\n  const cart = useSelector(getCartGoods);\n  const dispatch = useDispatch();\n  const [goodForBuy, setGoodForBuy] = useState<Good[]>(\n    goods.filter(good => cart.some(prod => prod.id === good.id)),\n  );\n\n  const [checkoutHeight] = useState(206);\n  const cartGoodWidth = 128;\n  const cardGap = 16;\n  const checkoutContainer = 90;\n  const maxForOrder = 10;\n\n  useEffect(() => {\n    if (cart.length) {\n      setGoodForBuy(goods\n        .filter(good => cart\n          .some(prod => prod.id === good.id)));\n    }\n  }, [cart, goods]);\n\n  const totalPrice = goodForBuy\n    .map(good => {\n      const clearPrice = good.discount > 0\n        ? good.price - ((good.price / 100) * good.discount)\n        : good.price;\n      const currentCount = cart.find(prod => prod.id === good.id)?.count;\n\n      return clearPrice * (currentCount || 1);\n    })\n    .reduce((accum, currentValue) => currentValue + accum, 0);\n\n  const priceWithoutDiscount = goodForBuy\n    .map(good => {\n      const { price } = good;\n      const currentCount = cart.find(prod => prod.id === good.id)?.count;\n\n      return price * (currentCount || 1);\n    })\n    .reduce((accum, currentValue) => accum + currentValue, 0);\n\n  return (\n    <>\n      {cart.length === 0 && (\n        <div className=\"Cart__Empty\">\n          <h1 className=\"Cart__EmptyTitle\">\n            Cart is empty :(\n          </h1>\n          <img\n            src=\"images/emptyCart.png\"\n            alt=\"Empty Cart\"\n            className=\"Cart__EmptyImage\"\n          />\n          <div className=\"Cart__ButtonContainer\">\n            <Link className=\"Cart__GoShop\" to=\"/\">\n              Go to shop\n            </Link>\n          </div>\n        </div>\n      )}\n      {cart.length > 0 && (\n        <div\n          className=\"Cart container\"\n          style={{\n            height: `${checkoutContainer + (cart.length * cartGoodWidth) + (cardGap * (cart.length - 1)) + checkoutHeight + cardGap}px`,\n          }}\n        >\n          <h1 className=\"Cart__Title\">\n            Cart\n          </h1>\n          <div className=\"Cart__InfoContainer\">\n            <ul\n              className=\"Cart__List\"\n              style={{\n                height: `${cart.length * cartGoodWidth + cardGap * cart.length}px`\n              }}\n            >\n              {goodForBuy.map((good, i) => (\n                <li\n                  className=\"Cart__Item\"\n                  key={good.id}\n                  style={{\n                    transform: `translateY(${(i * cartGoodWidth) + (cardGap * i - 1)}px)`,\n                  }}\n                >\n                  <div className=\"Cart__Info\">\n                    <label\n                      className=\"Cart__Label\"\n                    >\n                      <button\n                        className=\"Cart__Remove\"\n                        onClick={() => dispatch(deleteCartGoods(good.id))}\n                        type=\"button\"\n                      />\n                    </label>\n                    <div className=\"Cart__Image-Container\">\n                      <img\n                        src={good.imageUrl}\n                        alt={good.name}\n                        className=\"Cart__Image\"\n                      />\n                    </div>\n                    <p className=\"Cart__Name\">\n                      {good.name}\n                    </p>\n                  </div>\n                  <div className=\"Cart__CountAndPrice\">\n                    <div className=\"Cart__ControlPanel\">\n                      <button\n                        type=\"button\"\n                        className=\"Cart__ChangeCount\"\n                        disabled={\n                          Boolean(cart\n                            .find(prod => prod.id === good.id && prod.count === 1)?.count)\n                        }\n                        onClick={() => dispatch(changeCount(good.id, -1))}\n                      >\n                        <span className=\"Cart__CharMinus\" />\n                      </button>\n                      <p className=\"Cart__ModelCount\">\n                        {cart.find(prod => prod.id === good.id)?.count}\n                      </p>\n                      <button\n                        type=\"button\"\n                        className=\"Cart__ChangeCount\"\n                        disabled={\n                          Boolean(cart\n                            .find(prod => prod.id === good.id && prod.count === maxForOrder)?.count)\n                        }\n                        onClick={() =>  dispatch(changeCount(good.id, 1))}\n                      >\n                        <span className=\"Cart__CharPlus\" />\n                      </button>\n                    </div>\n                    <p className=\"Cart__Price\">\n                      $\n                      {good.discount > 0\n                        ? good.price - ((good.discount / 100) * good.price)\n                        : good.price}\n                    </p>\n                    {good.discount > 0 && (\n                      <p className=\"Cart__OldPriceCard\">\n                        $\n                        {good.price}\n                      </p>\n                    )}\n                  </div>\n                </li>\n              ))}\n            </ul>\n            {cart.length > 0 && (\n              <div className=\"Cart__Checkout\">\n                <div className=\"Cart__CheckoutContainer\">\n                  <p className=\"Cart__CheckoutPrice\">\n                    $\n                    {totalPrice}\n                  </p>\n                  {priceWithoutDiscount > totalPrice && (\n                    <p className=\"Cart__OldPrice\">\n                      $\n                      {priceWithoutDiscount}\n                    </p>\n                  )}\n                  <p className=\"Cart__CheckoutTotal\">\n                    Total for\n                    {' '}\n                    {cart.length}\n                    {' '}\n                    items\n                  </p>\n                  <Link\n                    to=\"/checkout\"\n                    className=\"Cart__CheckoutButton\"\n                    onClick={() => dispatch(clearCart())}\n                  >\n                    Checkout\n                  </Link>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './Checkout.scss';\nimport { Link } from 'react-router-dom';\n\nexport const Checkout: React.FC = () => {\n  return (\n    <div className=\"Checkout\">\n      <h1 className=\"Checkout__Title\">\n        Thank you for purchase\n      </h1>\n      <div className=\"Checkout__BackToShop\">\n        <Link className=\"Checkout__Link\" to=\"/\">\n          Go to shop\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport './Breadcrumbs.scss';\nimport { getGoods } from '../../store';\nimport { SECTION_LINKS, STATIC_PAGES, SERVICE_PAGES } from '../../helpers';\nimport { Icon } from '../Icon';\n\nexport const Breadcrumbs = () => {\n  const [sitemap, setSitemap] = useState<SitemapLink[]>([]);\n  const goods: Good[] = useSelector(getGoods);\n\n  const getSitemap = useCallback(\n    () => {\n      if (goods.length > 0) {\n        const generatedSitemap: SitemapLink[] = [\n          ...STATIC_PAGES,\n          ...SERVICE_PAGES,\n          ...SECTION_LINKS.map(section => ({\n            ...section,\n            children: goods\n              .filter(product => product.type === section.type)\n              .map(product => ({\n                name: product.name,\n                title: product.name,\n                url: product.id,\n              })),\n          })),\n        ];\n\n        setSitemap(generatedSitemap);\n      }\n    },\n    [goods],\n  );\n\n  useEffect(() => {\n    getSitemap();\n  }, [goods, getSitemap]);\n\n  const match: Match = useRouteMatch();\n  const levelOne = sitemap.find(item => item.url === match.params.levelOne);\n  let levelTwo = null;\n\n  if (levelOne && match.params.levelTwo) {\n    levelTwo = levelOne.children?.find((item) => item.url === match.params.levelTwo);\n  }\n\n  return (\n    <div className=\"Breadcrumbs\">\n      <ul className=\"Breadcrumbs__List\">\n        <li className=\"Breadcrumbs__Item\">\n          <Link to=\"/\" className=\"Breadcrumbs__Link\">\n            <Icon\n              name=\"home\"\n              size={1}\n              border={false}\n              inActive={false}\n            />\n          </Link>\n        </li>\n        {match.params.levelOne && (\n          <li className=\"Breadcrumbs__Item\">\n            <Link to={`/${levelOne?.url}` || ''} className=\"Breadcrumbs__Link\">\n              {levelOne?.title}\n            </Link>\n          </li>\n        )}\n        {levelTwo && (\n          <li className=\"Breadcrumbs__Item\">\n            {levelTwo?.title}\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './BackToTop.scss';\nimport { Icon } from '../Icon';\n\nexport const BackToTop = () => {\n  const scrolToTop = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    window.scrollTo(0, 0);\n  };\n\n  return (\n    <div className=\"BackToTop\">\n      <Link\n        to=\"#top\"\n        className=\"BackToTop__Link\"\n        onClick={scrolToTop}\n      >\n        <Icon\n          name=\"arrow-up\"\n          size={2}\n          border\n          inActive={false}\n        />\n      </Link>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { loadGoods, getCartGoods, getFavorites } from './store';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport { GoodsSection } from './components/GoodsSection';\nimport { GoodPage } from './components/GoodPage';\nimport { HomePage } from './components/HomePage';\nimport { Favorites } from './components/Favorites';\nimport { Cart } from './components/Cart';\nimport { Checkout } from './components/Checkout';\nimport { Breadcrumbs } from './components/Breadcrumbs';\nimport { BackToTop } from './components/BackToTop';\n\nexport const App = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const cart = useSelector(getCartGoods);\n  const favorites = useSelector(getFavorites);\n\n  useEffect(() => {\n    localStorage.setItem('cartItem', JSON.stringify([...cart]));\n  }, [cart]);\n\n  useEffect(() => {\n    localStorage.setItem('favoriteProducts', JSON.stringify([...favorites]));\n  }, [favorites]);\n\n  useEffect(() => {\n    dispatch(loadGoods());\n  }, [dispatch]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return (\n    <>\n      <Header />\n      <div className=\"container content-wrapper\">\n        <Switch>\n          <Route path=\"/\" exact />\n          <Route path=\"/:levelOne?/:levelTwo?\">\n            <Breadcrumbs />\n          </Route>\n        </Switch>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/favorites\" exact component={Favorites} />\n          <Route path=\"/cart\" exact component={Cart} />\n          <Route path=\"/checkout\" exact component={Checkout} />\n          <Route path=\"/:section\" exact component={GoodsSection} />\n          <Route path=\"/:section/:good\" exact component={GoodPage} />\n        </Switch>\n      </div>\n      <Footer />\n      <BackToTop />\n    </>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './style/index.scss';\nimport store from './store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}